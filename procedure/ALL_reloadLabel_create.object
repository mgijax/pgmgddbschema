#!/bin/sh

#
# History
#
# 03/04/2005 lec
#	- TR 4289, MPR
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/ALL_reloadLabel.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION ALL_reloadLabel (
v_alleleKey int
)
RETURNS VOID AS
\$\$

DECLARE
v_userKey int;
allele_cursor refcursor;
v_labelstatusKey int;
v_priority int;
v_label all_label.label%TYPE;
v_labelType all_label.labelType%TYPE;
v_labelTypeName char(255);

BEGIN

-- Delete all ALL_Label records for a Allele and regenerate

DELETE FROM ALL_Label WHERE _Allele_key = v_alleleKey;

OPEN allele_cursor FOR
SELECT DISTINCT 1 as _Label_Status_key, 1 as priority, 
a.symbol, labelType = 'AS', labelTypeName = 'allele symbol' 
FROM ALL_Allele a
WHERE a._Allele_key = v_alleleKey
AND a.isWildType = 0
UNION 
SELECT distinct 1 as _Label_Status_key, 2 as priority,
a.name, labelType = 'AN', labelTypeName = 'allele name' 
FROM ALL_Allele a
WHERE a._Allele_key = v_alleleKey
AND a.isWildType = 0
UNION
SELECT 1 as _Label_Status_key, 3 as priority,
s.synonym, labelType = 'AY', labelTypeName = 'synonym' 
FROM MGI_Synonym_Allele_View s
WHERE s._Object_key = v_alleleKey
;
LOOP
        FETCH allele_cursor INTO v_labelstatusKey, v_priority, v_label, v_labelType, v_labelTypeName;
        EXIT WHEN NOT FOUND;

	INSERT INTO ALL_Label 
	(_Allele_key, _Label_Status_key, priority, label, labelType, labelTypeName, creation_date, modification_date)
	VALUES (v_alleleKey, v_labelstatusKey, v_priority, v_label, v_labelType, v_labelTypeName, current_date, current_date)
	;

END LOOP;
CLOSE allele_cursor;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION ALL_reloadLabel(int) TO public;

COMMENT ON FUNCTION mgd.ALL_reloadLabel(int) IS 'creates a new acc_accessionreference row';

EOSQL

