#!/bin/sh

#
# HISTORY
#
# lec	01/22/2002
#	- TR 2867; added
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/GXD_orderAllelePairs_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION GXD_orderAllelePairs (
v_genotypeKey int
)
RETURNS VOID AS
\$\$

DECLARE
v_pkey int;		-- primary key of records to update
v_oldSeq int;		-- current sequence number
v_newSeq int := 1;	-- new sequence number

BEGIN

-- Re-order the Allele Pairs of the given Genotype
-- alphabetically by Marker Symbol
--
-- if the Genotype contains an Allele whose Compound value != Not Applicable
-- then do not reorder

IF EXISTS (SELECT 1 FROM GXD_AllelePair ap, VOC_Term t
	WHERE ap._Genotype_key = v_genotypeKey
	AND ap._Compound_key = t._Term_key
	AND t.term != 'Not Applicable')
THEN
    RETURN;
END IF;

FOR v_pkey, v_oldSeq IN
SELECT _AllelePair_key, sequenceNum
FROM GXD_AllelePair_View
WHERE _Genotype_key = v_genotypeKey 
ORDER BY symbol
LOOP
  	UPDATE GXD_AllelePair 
	SET sequenceNum = v_newSeq
    	WHERE _AllelePair_key = v_pkey
	;
  	v_newSeq := v_newSeq + 1;
END LOOP;

RETURN;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION GXD_orderAllelePairs(int) TO public;

COMMENT ON FUNCTION mgd.GXD_orderAllelePairs(int) IS 're-order the allele pairs of the given genotype';

EOSQL
