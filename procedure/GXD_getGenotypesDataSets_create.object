#!/bin/sh

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/GXD_getGenotypesDataSets_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION GXD_getGenotypesDataSets (
v_genotypeKey int,
v_countOnly int DEFAULT 0
)
RETURNS VOID AS
\$\$

DECLARE

BEGIN

-- Select all Data Sets for given Genotype 
 
CREATE TEMP TABLE objects ON COMMIT DROP
AS SELECT DISTINCT s._Refs_key, 'Reference' as label, 'GXD Assay' as dataSet
FROM GXD_Expression s
WHERE s._Genotype_key = v_genotypeKey
UNION
SELECT DISTINCT e._Refs_key, 'Reference' as label, 'PhenoSlim Annotation' as dataSet
FROM VOC_Evidence e, VOC_Annot a, VOC_AnnotType t
WHERE t.name = 'PhenoSlim/Genotype'
AND t._AnnotType_key = a._AnnotType_key
AND a._Object_key = v_genotypeKey
AND a._Annot_key = e._Annot_key
UNION
SELECT DISTINCT e._Refs_key, 'Reference' as label, 'Mammalian Phenotype Annotation' as dataSet
FROM VOC_Evidence e, VOC_Annot a, VOC_AnnotType t
WHERE t.name = 'Mammalian Phenotype/Genotype'
AND t._AnnotType_key = a._AnnotType_key
AND a._Object_key = v_genotypeKey
AND a._Annot_key = e._Annot_key
UNION
SELECT DISTINCT e._Refs_key, 'Reference' as label, 'OMIM Annotation' as dataSet
FROM VOC_Evidence e, VOC_Annot a, VOC_AnnotType t
where t.name = 'OMIM/Genotype'
AND t._AnnotType_key = a._AnnotType_key
AND a._Object_key = v_genotypeKey
AND a._Annot_key = e._Annot_key
UNION
SELECT DISTINCT null, s.strain, 'Strain' as dataSet
FROM PRB_Strain_Genotype ps, PRB_Strain s
WHERE ps._Genotype_key = v_genotypeKey
AND ps._Strain_key = s._Strain_key
;

CREATE INDEX idx1 ON objects(_Refs_key);

IF v_countOnly = 1
THEN
	SELECT count(*) FROM objects;
ELSE
	SELECT b.jnum, b.short_citation, o.dataSet
	FROM objects o, BIB_View b
	WHERE o._Refs_key = b._Refs_key
	UNION
	SELECT null, o.label, o.dataSet
	FROM objects o
	WHERE o._Refs_key IS NULL
	ORDER BY b.jnum
	;
END IF;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION GXD_getGenotypesDataSets(int,int) TO public;

COMMENT ON FUNCTION mgd.GXD_getGenotypesDataSets(int,int) IS 'select all data sets for genotype';

EOSQL

