#!/bin/sh

#
# History
#
# 08/14/2018	lec
#	- TR 11855/when new "Needs Review - Chr" is added, this will be ready
#
# 06/19/2012	lec
#	- TR 1110/"Needs Review - nomen" moved to "Needs Review - symbol"
#
# 04/17/2008 - jsb - new addition for TR8511
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/PRB_setStrainReview_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION PRB_setStrainReview(
v_markerKey int DEFAULT null,
v_alleleKey int DEFAULT null,
v_reviewKey int DEFAULT 8581446
)
RETURNS VOID AS
\$\$

DECLARE
v_annotTypeKey int;
v_qualifierKey int;
v_annotKey int;
v_strainKey int;

BEGIN

--
-- sets the "Needs Review" flag for all strains of a marker or allele.
--
-- default "Needs Review - symbol" flag for all strains of a marker or allele (8581446).
--
-- called during nomenclature update process (MRK_simpleWithdrawal, MRK_updateKeys)
-- or when allele symbols is updated (trigger/ALL_Allele)
-- or when a phenotype mutant is withdrawn as an allele of (MRK_mergeWithdrawal)
--

v_annotTypeKey := 1008;
v_qualifierKey := 1614158;
v_annotKey := nextval('voc_annot_seq');

IF (v_markerKey = null) AND (v_alleleKey = null)
THEN
    RAISE EXCEPTION E'Either marker or allele key must be non-null';
    RETURN;
END IF;

-- marker key is non-null
IF v_markerKey IS NOT null
THEN
    FOR v_strainKey IN
    SELECT DISTINCT _Strain_key
    FROM PRB_Strain_Marker
    WHERE _Marker_key = v_markerKey
    LOOP
	IF NOT EXISTS (SELECT 1 FROM VOC_Annot
	    WHERE _AnnotType_key = v_annotTypeKey
		AND _Object_key = v_strainKey
		AND _Term_key = v_reviewKey)
	THEN
	    INSERT INTO VOC_Annot (_Annot_key, _AnnotType_key, _Object_key, _Term_key, _Qualifier_key,
		creation_date, modification_date)
	    VALUES (v_annotKey, v_annotTypeKey, v_strainKey,
	        v_reviewKey, v_qualifierKey, now(), now())
	    ;

	    v_annotKey := v_annotKey + 1;
        END IF;
    END LOOP;

-- allele key is non-null
ELSE	
    FOR v_strainKey IN
    SELECT DISTINCT _Strain_key
    FROM PRB_Strain_Marker
    WHERE _Allele_key = v_alleleKey
    LOOP
	IF NOT EXISTS (SELECT 1 FROM VOC_Annot
	    WHERE _AnnotType_key = v_annotTypeKey
		AND _Object_key = v_strainKey
		AND _Term_key = v_reviewKey)
	THEN
	    INSERT INTO VOC_Annot (_Annot_key, _AnnotType_key, _Object_key, _Term_key, _Qualifier_key, 
		creation_date, modification_date)
	    VALUES (v_annotKey, v_annotTypeKey, v_strainKey,
	        v_reviewKey, v_qualifierKey, now(), now())
	    ;

	    v_annotKey := v_annotKey + 1;
        END IF;

    END LOOP;
END IF;

RETURN;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION PRB_setStrainReview(int,int,int) TO public;

COMMENT ON FUNCTION mgd.PRB_setStrainReview(int,int,int) IS 'creates a new acc_accessionreference row';

EOSQL
