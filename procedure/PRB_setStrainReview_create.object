#!/bin/sh

#
# History
#
# 06/19/2012	lec
#	- TR 1110/"Needs Review - nomen" moved to "Needs Review - symbol"
#
# 04/17/2008 - jsb - new addition for TR8511
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/PRB_setStrainReview_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION PRB_setStrainReview(
v_markerKey int DEFAULT null,
v_alleleKey int DEFAULT null
)
RETURNS VOID AS
\$\$

DECLARE
v_nomenReviewKey int;
v_annotTypeKey int;
v_qualifierKey int;
v_annotKey int;
v_strainKey int;
strain_cursor refcursor;

BEGIN

--
-- Set the "Needs Review - symbol" flag for all strains of a marker or allele.
-- This is needed for the nomen update process.
--

v_nomenReviewKey := 8581446;
v_annotTypeKey := 1008;
v_qualifierKey := 1614158;
v_annotKey := max(_Annot_key) + 1 from VOC_Annot;

IF (v_markerKey = null) AND (v_alleleKey = null)
THEN
    RAISE EXCEPTION E'Either marker or allele key must be non-null';
    RETURN;
END IF;

-- marker key is non-null
IF v_markerKey IS NOT null
THEN
    OPEN strain_cursor FOR
    SELECT DISTINCT _Strain_key
    FROM PRB_Strain_Marker
    WHERE _Marker_key = v_markerKey
    ;

    LOOP
        FETCH strain_cursor INTO v_strainKey;
        EXIT WHEN NOT FOUND;

	IF NOT EXISTS (SELECT 1 FROM VOC_Annot
	    WHERE _AnnotType_key = v_annotTypeKey
		AND _Object_key = v_strainKey
		AND _Term_key = v_nomenReviewKey)
	THEN
	    INSERT INTO VOC_Annot (_Annot_key, _AnnotType_key, _Object_key, _Term_key, _Qualifier_key,
		creation_date, modification_date)
	    VALUES (v_annotKey, v_annotTypeKey, v_strainKey,
	        v_nomenReviewKey, v_qualifierKey, current_date, current_date)
	    ;

	    v_annotKey := v_annotKey + 1;
        END IF;
    END LOOP;
    CLOSE strain_cursor;

-- allele key is non-null
ELSE	
    OPEN strain_cursor FOR
    SELECT DISTINCT _Strain_key
    FROM PRB_Strain_Marker
    WHERE _Allele_key = v_alleleKey
    ;

    LOOP
        FETCH strain_cursor INTO v_strainKey;
        EXIT WHEN NOT FOUND;

	IF NOT EXISTS (SELECT 1 FROM VOC_Annot
	    WHERE _AnnotType_key = v_annotTypeKey
		AND _Object_key = v_strainKey
		AND _Term_key = v_nomenReviewKey)
	THEN
	    INSERT INTO VOC_Annot (_Annot_key, _AnnotType_key, _Object_key, _Term_key, _Qualifier_key, 
		creation_date, modification_date)
	    VALUES (v_annotKey, v_annotTypeKey, v_strainKey,
	        v_nomenReviewKey, v_qualifierKey, current_date, current_date)
	    ;

	    v_annotKey := v_annotKey + 1;
        END IF;

    END LOOP;
    CLOSE strain_cursor;
END IF;

RETURN;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION PRB_setStrainReview(int,int) TO public;

COMMENT ON FUNCTION mgd.PRB_setStrainReview(int, int) IS 'creates a new acc_accessionreference row';

EOSQL
