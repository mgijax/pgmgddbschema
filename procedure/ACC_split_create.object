#!/bin/sh
#
# History
#
# lec	03/01/2012
#	- TR10859; change (> 10) to (>= 10)
#
# lec   09/22/2011
#       - TR 10859; ACC_split; added logicaldb; skip DOI (65)
#
# lec	01/18/2006
#	- TR 7182; increased prefixPart to 30
#
#
cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

DROP FUNCTION ACC_split(varchar);

CREATE OR REPLACE FUNCTION ACC_split (
accID varchar(30),
out prefixPart varchar(30),
out numericPart int
)
AS
\$\$

DECLARE
temp varchar(30);
suffix varchar(30);
acclen int;
idx int;


BEGIN

/* Remove trailing blanks */
select into accID rtrim(accID)
;

select into acclen char_length(accID)
;

select into temp reverse(accID)
;

select into idx patindex('%[^0-9]%',temp)
;

select accID, substring(accID, E'\\D+'), substring(accID, E'\\d+') from ACC_Accession 
where _Object_key = 3

select regexp_matches('A2ALT2', E'^((.*[^0-9])?)([0-9]*)', 'g')

/* If @idx = 0, then no prefix */
if idx = 0
then
	select into numericPart accID::integer
	;

	select into prefixPart NULL
	;

else
	select into prefixPart reverse(substring(temp,idx,acclen-idx+1))
	;

	select into suffix substring(accID,
		char_length(prefixPart)+1,
		acclen - char_length(prefixPart))
	;

	/* if length of the suffix will result in arithmatic overflow... */
	if char_length(suffix) >= 10
	then
		select into prefixPart accID
		;

		select into numericPart NULL
		;

	else
		if suffix is not NULL
		then
			select into numericPart suffix::integer
			;

		else
			select into numericPart NULL
			;

		end if;

	end if;

end if;


END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION ACC_split(varchar) TO public;

EOSQL
