#!/bin/sh

#
# This file was generated automatically by dbschemaScripts.py -- edit with care.
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/MRK_updateOffset_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION MRK_updateOffset (
oldKey int,
newKey int
)
RETURNS VOID AS
\$\$

DECLARE
oldCyto mrk_marker.cytogeneticOffset%TYPE;
newCyto mrk_marker.cytogeneticOffset%TYPE;
oldMGD float;
newMGD float;
oldCC float;
newCC float;
oldMIT float;
newMIT float;

BEGIN

oldCyto := cytogeneticOffset from MRK_Marker WHERE _Marker_key = oldKey;

newCyto := cytogeneticOffset from MRK_Marker WHERE _Marker_key = newKey;

oldMGD := cmoffset from MRK_Offset WHERE _Marker_key = oldKey AND source = 0;

oldCC := cmoffset from MRK_Offset WHERE _Marker_key = oldKey AND source = 1;

oldMIT := cmoffset from MRK_Offset WHERE _Marker_key = oldKey AND source = 2;

newMGD := cmoffset from MRK_Offset WHERE _Marker_key = newKey AND source = 0;

newCC := cmoffset from MRK_Offset WHERE _Marker_key = newKey AND source = 1;

newMIT := cmoffset from MRK_Offset WHERE _Marker_key = newKey AND source = 2;

-- If the new symbol lacks an Cytogenetic cmoffset, then use the old symbols' cmoffset

IF newCyto IS NULL
THEN
	UPDATE MRK_Marker SET cytogeneticOffset = oldCyto WHERE _Marker_key = newKey;

-- If the new symbol lacks an MGD cmoffset, then use the old symbols' cmoffset
END IF;

IF newMGD < 0
THEN
	UPDATE MRK_Offset set cmoffset = oldMGD WHERE _Marker_key = newKey AND source = 0;

-- If the new symbol lacks a CC cmoffset, then use the old symbol's CC cmoffset
END IF;

IF newCC < 0 AND oldCC > 0
THEN
	UPDATE MRK_Offset set cmoffset = oldCC WHERE _Marker_key = newKey AND source = 1;

ELSIF newCC IS NULL AND oldCC IS NOT NULL
THEN
	INSERT INTO MRK_Offset (_Marker_key, source, cmoffset) values(newKey, 1, oldCC);

-- If the new symbol lacks an MIT cmoffset, then use the old symbol's MIT cmoffset
END IF;

IF newMIT < 0 AND oldMIT > 0
THEN
	UPDATE MRK_Offset set cmoffset = oldMIT WHERE _Marker_key = newKey AND source = 2;

ELSIF newMIT IS NULL AND oldMIT IS NOT NULL
THEN
	INSERT INTO MRK_Offset (_Marker_key, source, cmoffset) values(newKey, 2, oldMIT);

END IF;


END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION MRK_updateOffset(int,int) TO public;

COMMENT ON FUNCTION mgd.MRK_updateOffset(int,int) IS 'update cytogenetic and centimorgan cmoffsets for newKey using oldKey values.';

EOSQL
