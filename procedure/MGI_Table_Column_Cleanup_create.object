#!/bin/sh

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/MGI_Table_Column_Cleanup_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION MGI_Table_Column_Cleanup (
)
RETURNS VOID AS
\$\$

-- This procedure synchronizes MGI_Tables and MGI_Columns with
-- sysobjects and syscolumns.
--
-- After a schema change, this procedure needs to be run so the obsolete
-- tables and columns are removed FROM MGI_Tables and MGI_Columns

-- Add new tables to MGI_Tables

BEGIN

INSERT INTO MGI_Tables
SELECT s.tablename, null, 1000, current_date, current_date, current_date
FROM pg_catalog.pg_tables s
WHERE s.schemaname = 'mgd'
and NOT EXISTS (SELECT 1 FROM MGI_Tables t WHERE s.tablename = lower(t.table_name))
;

-- Add new columns to MGI_Columns

INSERT INTO MGI_Columns
SELECT t.table_name, c.column_name, null, null, current_date, current_date
FROM MGI_Tables t, pg_catalog.pg_tables s, information_schema.columns c
WHERE lower(t.table_name) = s.tablename
AND s.tablename = c.table_name
AND NOT EXISTS (SELECT 1 FROM MGI_Columns l
	WHERE t.table_name = l.table_name
	AND lower(l.column_name) = c.column_name)
;

-- Delete old tables FROM MGI_Tables

DELETE FROM MGI_Tables t
WHERE NOT EXISTS (SELECT 1 FROM pg_catalog.pg_tables s WHERE s.tablename = lower(t.table_name))
;

-- Delete old columns FROM MGI_Columns

DELETE FROM MGI_Columns c
WHERE NOT EXISTS (SELECT 1 FROM MGI_Tables t WHERE lower(t.table_name) = lower(c.table_name))
;

DELETE FROM MGI_Columns c
WHERE NOT EXISTS (SELECT 1 FROM pg_catalog.pg_tables s, information_schema.columns c
	WHERE lower(c.table_name) = s.tablename
	AND s.tablename = c.table_name
	AND lower(c.column_name) = c.column_name)
;

UPDATE MGI_Columns SET description = 'user who created the record' WHERE column_name = '_CreatedBy_key'
;
UPDATE MGI_Columns SET description = 'user who last modified the record' WHERE column_name = '_ModifiedBy_key'
;
UPDATE MGI_Columns SET description = 'date record was created' WHERE column_name = 'creation_date'
;
UPDATE MGI_Columns SET description = 'date record was last modified' WHERE column_name = 'modification_date'
;
UPDATE MGI_Columns SET description = 'foreign key to any object defined in ACC_MGIType' WHERE column_name = '_Object_key'
;
UPDATE MGI_Columns SET description = 'foreign key to ACC_MGIType' WHERE column_name = '_MGIType_key' and description is null
;
UPDATE MGI_Columns SET description = 'foreign key to MRK_Marker' WHERE column_name = '_Marker_key' and description is null
;
UPDATE MGI_Columns SET description = 'foreign key to PRB_Probe' WHERE column_name = '_Probe_key' and description is null
;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION MGI_Table_Column_Cleanup() TO public;

COMMENT ON FUNCTION mgd.MGI_Table_Column_Cleanup() IS '';

EOSQL
