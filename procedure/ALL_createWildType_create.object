#!/bin/sh

#
# History
#
# current_date must remain as current_date; do not change to now()
#
# 01/23/2003 lec
#	- TR 4463; set J: (reference) to Null (was J:23000)
#
# 07/18/2002 lec
#	- TR 3588
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/ALL_createWildType_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

--
-- NAME: ALL_createWildType
--
-- DESCRIPTION:
--        
-- Create a Wild Type Allele
-- Use Reference = J:23000
-- Set all other attributes = Not Applicable
--
-- INPUT:
--
-- v_userKey   : MGI_User._User_key
-- v_markerKey : MRK_Marker._Marker_key
-- v_symbol mrk_marker.symbol%TYPE
--
-- RETURNS:
--	VOID
--      

CREATE OR REPLACE FUNCTION ALL_createWildType (
v_userKey int,
v_markerKey int,
v_symbol mrk_marker.symbol%TYPE
)
RETURNS VOID AS
\$\$

DECLARE
v_asymbol all_allele.symbol%TYPE;

BEGIN

v_asymbol := v_symbol || '<+>';

PERFORM ALL_insertAllele (
	v_userKey,
	v_markerKey,
	v_asymbol,
	'wild type',
	null,
	1,
	v_userKey,
	v_userKey,
	v_userKey,
	current_date,
	-2,
	'Not Applicable',
	'Not Applicable',
        'Approved',
        null,
        'Not Applicable',
        'Not Specified',
        'Not Specified',
        'Curated'
	);

IF NOT FOUND
THEN
	RAISE EXCEPTION E'ALL_createWildType: PERFORM ALL_insertAllele failed';
END IF;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION ALL_createWildType(int,int,text) TO public;

COMMENT ON FUNCTION ALL_createWildType(int,int,text) IS 'create wild type allele';

EOSQL
