#!/bin/sh

#
# History
#
# lec   07/09/2008
#       - TR 9057; new
#
# example:
#    select ACC_insertNoChecks(1, 'test-A1B1C123', 1, 'Marker', -1, 0)
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/ACC_insertNoChecks_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION ACC_insertNoChecks (
v_userKey int,
v_objectKey int,
v_accID acc_accession.accid%TYPE,
v_logicalDB int,
v_mgiType acc_mgitype.name%TYPE,
v_refsKey int DEFAULT -1,
v_preferred int DEFAULT 1,
v_private int DEFAULT 0,
v_dosplit int DEFAULT 1
)
RETURNS VOID AS
\$\$

DECLARE
v_nextACC int;
v_mgiTypeKey int;
v_prefixPart acc_accession.prefixPart%TYPE;
v_numericPart acc_accession.numericPart%Type;

BEGIN

/* Insert record into master Accession table. */
/* If reference is given, insert record into Accession Reference table. */

IF v_accID IS NULL
THEN
	RETURN;
END IF;

v_nextACC := max(_Accession_key) + 1 FROM ACC_Accession;

v_mgiTypeKey := _MGIType_key FROM ACC_MGIType WHERE name = v_mgiType;
v_prefixPart := v_accID;
v_numericPart := 0;

/* skip the splitting...for example, the Reference/DOI ids are not split */

IF v_dosplit
THEN
	/* split accession id INTO prefixPart/numericPart */
	SELECT * FROM ACC_split(v_accID) INTO v_prefixPart, v_numericPart;
END IF;

IF v_numericPart = 0
THEN
	INSERT INTO ACC_Accession
	(_Accession_key, accID, prefixPart, numericPart, _LogicalDB_key, _Object_key, 
 	 _MGIType_key, private, preferred, _CreatedBy_key, _ModifiedBy_key)
	VALUES(v_nextACC, v_accID, v_prefixPart, null, 
               v_logicalDB, v_objectKey, v_mgiTypeKey, v_private, v_preferred, v_userKey, v_userKey);
ELSE
	INSERT INTO ACC_Accession
	(_Accession_key, accID, prefixPart, numericPart, _LogicalDB_key, _Object_key, 
 	 _MGIType_key, private, preferred, _CreatedBy_key, _ModifiedBy_key)
	VALUES(v_nextACC, v_accID, v_prefixPart, v_numericPart, 
               v_logicalDB, v_objectKey, v_mgiTypeKey, v_private, v_preferred, v_userKey, v_userKey);
END IF;

IF v_refsKey != -1
THEN
	PERFORM ACCRef_insert(v_userKey, v_nextAcc, v_refsKey);
END IF;

RETURN;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION ACC_insertNoChecks(int,int,varchar,int,varchar,int,int,int,int) TO public;

COMMENT ON FUNCTION mgd.ACC_insertNoChecks(int,int,varchar,int,varchar,int,int,int,int) IS 'update acc_accession/acc_accessionreference';

EOSQL
