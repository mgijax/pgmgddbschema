#!/bin/sh

#
# History
#
# lec   07/09/2008
#       - TR 9057; new
#
# example:
#    ACC_insertNoChecks(1, 'test-A1B1C123', 1, 'Marker', -1, 0)
#

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

DROP FUNCTION ACC_insertNoChecks(int,varchar,int,varchar,int,int,int);

CREATE OR REPLACE FUNCTION ACC_insertNoChecks (
v_objectKey int,
v_accID varchar(30),
v_logicalDB int,
v_mgiType varchar(80),
v_refsKey int DEFAULT -1,
v_preferred int DEFAULT 1,
v_private int DEFAULT 0
)
RETURNS VOID AS
\$\$

DECLARE
v_nextACC int;
v_mgiTypeKey int;
v_prefixPart varchar(30);
v_numericPart int;
v_userKey int;

BEGIN

/* Insert record into master Accession table. */
/* If reference is given, insert record into Accession Reference table. */

if accID is null
then
	return;
end if;

select into v_nextACC max(_Accession_key) + 1 from ACC_Accession
;

select into v_mgiTypeKey _MGIType_key from ACC_MGIType where name = v_mgiType
;

select into v_userKey _User_key from MGI_User where login = current_user
;

select ACC_split(v_accID) into v_prefixPart, v_numericPart
;

insert into ACC_Accession
(_Accession_key, accID, prefixPart, numericPart, _LogicalDB_key,
_Object_key, _MGIType_key, private, preferred, _CreatedBy_key, _ModifiedBy_key)
values(v_nextACC, v_accID, v_prefixPart, v_numericPart, v_logicalDB, v_objectKey, v_mgiTypeKey, v_private, v_preferred, v_userKey, v_userKey)
;

if refsKey != -1
then
	select ACCRef_insert(v_nextAcc, v_refsKey);
end if;


END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION ACC_insertNoChecks(int,varchar,int,varchar,int,int,int) TO public;

EOSQL
