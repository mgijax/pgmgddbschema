#!/bin/sh

#
# This file was generated automatically by dbschemaScripts.py -- edit with care.
#

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

DROP FUNCTION PRB_getTissueDataSets(int,int);

CREATE OR REPLACE FUNCTION PRB_getTissueDataSets (
tissueKey int,
countOnly int = 0
)
RETURNS VOID AS
\$\$


BEGIN

/* Select all Data Sets for given Tissue */
create temporary table source as
select _Source_key 
from PRB_Source
where _Tissue_key = tissueKey
order by _Source_key
;

if (select count(*) from source) = 0
then
	return;
end if;

create unique index index_Source_key on source(_Source_key)
;

create temporary table datasets as
select p._Probe_key as dataKey, dataSet = 'Molecular Segment'
from PRB_Probe p, source s
where p._Source_key = s._Source_key
union
select a._Antigen_key as dataKey, dataSet = 'Antigen'
from GXD_Antigen a, source s
where a._Source_key = s._Source_key
;

if countOnly = 1
then
	select count(*) from datasets
	;

else
	select a.accID, d.dataSet, a.numericPart
	from datasets d, PRB_Acc_View a
	where d.datakey = a._Object_key
	and a.prefixPart = 'MGI:'
	and a._LogicalDB_key = 1
	and a.preferred = 1
	union
	select a.accID, d.dataSet, a.numericPart
	from datasets d, GXD_Antigen_Acc_View a
	where d.datakey = a._Object_key
	and a.prefixPart = 'MGI:'
	and a._LogicalDB_key = 1
	and a.preferred = 1
	order by a.numericPart
	;

end if;


END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION PRB_getTissueDataSets(int,int) TO public;

EOSQL
