#!/bin/sh

#
# History
#
# mgidbutilities/bin/runDelteObsoleteDummy.csh
# loadadmin/prod/sundaytasks.csh
#
# 01/14/2004
#	- JSAM
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/SEQ_deleteObsoleteDummy_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION SEQ_deleteObsoleteDummy (
)
RETURNS VOID AS
\$\$

DECLARE
v_userKey int;

BEGIN

-- delete obsolete dummies...those dummy Sequence records 
-- which are no longer associated with a Marker or Molecular Segment. 

-- for mouse, if it's not in either cache table, then it's potential obsolete 
-- for non-mouse, we have to look directly into the accession table 

-- select all sequences that have a status of 'Not Loaded' or 'DELETED' 
-- and a rawType of 'Not Loaded'

CREATE TEMP TABLE toDelete ON COMMIT DROP
AS SELECT s._Sequence_key
FROM SEQ_Sequence s, SEQ_Sequence_Raw r
WHERE s._SequenceStatus_key in (316343, 316345)
AND s._Sequence_key = r._Sequence_key
AND r.rawType = 'Not Loaded'
AND not exists (select 1 from SEQ_Marker_Cache sc where s._Sequence_key = sc._Sequence_key)
AND not exists (select 1 from SEQ_Probe_Cache sc where s._Sequence_key = sc._Sequence_key)
;

CREATE INDEX idx_key ON toDelete(_Sequence_key);

-- remove items from the deletion list if they are annotated to non-mouse Markers

DELETE FROM toDelete t
USING ACC_Accession a1, ACC_Accession a2, MRK_Marker m
WHERE t._Sequence_key = a1._Object_key
AND a1._MGIType_key = 19
AND a1.accID = a2.accID
AND a1._LogicalDB_key = a2._LogicalDB_Key
AND a2._MGIType_key = 2
AND a2._Object_key = m._Marker_key
AND m._Organism_key != 1
;

-- remove items from the deletion list if they are annotated to mouse Molecular Segments that are not cached 
-- those MolSegs with "The source of the material used to create this cDNA probe" note

DELETE FROM toDelete t
USING ACC_Accession a1, ACC_Accession a2, PRB_Probe p, PRB_Source s
WHERE t._Sequence_key = a1._Object_key
AND a1._MGIType_key = 19
AND a1.accID = a2.accID
AND a1._LogicalDB_key = a2._LogicalDB_Key
AND a2._MGIType_key = 3
AND a2._Object_key = p._Probe_key
AND p._Source_key = s._Source_key
AND s._Organism_key = 1
;

-- remove items from the deletion list if they are annotated to non-mouse Molecular Segments

DELETE FROM toDelete t
USING ACC_Accession a1, ACC_Accession a2, PRB_Probe p, PRB_Source s
WHERE t._Sequence_key = a1._Object_key
AND a1._MGIType_key = 19
AND a1.accID = a2.accID
AND a1._LogicalDB_key = a2._LogicalDB_Key
AND a2._MGIType_key = 3
AND a2._Object_key = p._Probe_key
AND p._Source_key = s._Source_key
AND s._Organism_key != 1
;

-- delete items left in the deletion list

DELETE FROM SEQ_Sequence_Raw s
USING todelete d
WHERE d._Sequence_key = s._Sequence_key
;

DELETE FROM SEQ_Sequence s
USING todelete d
WHERE d._Sequence_key = s._Sequence_key
;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION SEQ_deleteObsoleteDummy() TO public;

COMMENT ON FUNCTION mgd.SEQ_deleteObsoleteDummy() IS '';

EOSQL

