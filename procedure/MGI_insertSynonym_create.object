#!/bin/sh

#
# History
#
# 08/25/2014	lec
#	- TR11654/stored procedures for postgres
#
# 12/09/2004	lec
#	- TR 5686
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/MGI_insertSynonym_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION MGI_insertSynonym (
v_userKey int,
v_objectKey int,
v_mgiTypeKey int,
v_synTypeKey int,
v_synonym mgi_synonym.synonym%TYPE,
v_refsKey int DEFAULT null,
v_ignoreduplicate int DEFAULT 0
)
RETURNS VOID AS
\$\$

DECLARE
v_synKey int;

BEGIN

v_synKey := nextval('mgi_synonym_seq');

IF NOT EXISTS (SELECT 1 FROM MGI_Synonym
	WHERE _Object_key = v_objectKey
	AND _MGIType_key = v_mgiTypeKey
	AND _SynonymType_key = v_synTypeKey
	AND synonym = v_synonym)
THEN
	INSERT INTO MGI_Synonym
	(_Synonym_key, _Object_key, _MGIType_key, _SynonymType_key, _Refs_key, synonym, 
	 _CreatedBy_key, _ModifiedBy_key, creation_date, modification_date)
	VALUES (v_synKey, v_objectKey, v_mgiTypeKey, v_synTypeKey, v_refsKey, v_synonym, 
		v_userKey, v_userKey, now(), now());

ELSIF v_ignoreduplicate = 0
THEN
	RAISE EXCEPTION E'\nMGI_insertSynonym: Duplicate Synonym Symbol (%)', v_synonym;
	RETURN;

END IF;


END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION MGI_insertSynonym(int,int,int,int,text,int, int) TO public;

COMMENT ON FUNCTION mgd.MGI_insertSynonym(int,int,int,int,text,int, int) IS 'create a new synonym in the mgi_synonym table';

EOSQL
