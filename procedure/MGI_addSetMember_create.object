#!/bin/sh

#
# History
#
# 01/10/2020    lec 
#       - TR13007/RNA Sequence project/add Genotype Clipboard for new APIR12223/add Assay/Genotype/Stage to Genotype set/clipboard
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/MGI_addSetMember_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION MGI_addSetMember (
v_setKey int,
v_objectKey int,
v_userKey int,
v_label text,
v_stageKey int DEFAULT 0
)
RETURNS VOID AS
\$\$

DECLARE
v_newSetMemberKey int;
v_newSeqKey int;
v_newSetMemberEmapaKey int;

BEGIN

--
-- NAME: MGI_addSetMember
--
-- DESCRIPTION:
--
-- To add set member to set
-- (MGI_SetMember, MGI_SetMember_Genotype)
--        
-- INPUT:
--      
-- v_setKey      : MGI_Set._Set_key
-- v_objectKey   : should match v_setKey
-- v_userKey     : MGI_User._User_key
-- v_label       : MGI_SetMember.label
-- v_stageKey    : GXD_TheilerStage._Stage_key
--
-- RETURNS:
--	VOID
--

v_newSetMemberKey := max(_SetMember_key) + 1 from MGI_SetMember;
v_newSeqKey := max(sequenceNum) + 1 from MGI_SetMember where _Set_key = v_setKey and _CreatedBy_key = v_userKey;
v_newSetMemberEmapaKey := max(_SetMember_Emapa_key) + 1 from MGI_SetMember_EMAPA;

IF v_newSeqKey is null THEN
	v_newSeqKey := 1;
END IF;

-- if _set_key, _object_key, _createdby_key does not exists, then add it

IF v_setKey != 1046 AND 
        NOT EXISTS (select * from MGI_SetMember where _set_key = v_setKey and _object_key = v_objectKey and _createdby_key = v_userKey) THEN

        INSERT INTO MGI_SetMember
        SELECT v_newSetMemberKey, v_setKey, v_objectKey, v_label, v_newSeqKey, v_userKey, v_userKey, now(), now()
        ;

        RETURN;
END IF;

-- if _set_key, _object_key, _createdby_key, _stage_key does not exists, then add it
-- for sets that require MGI_SetMember_EMAPA

IF v_setKey = 1046 AND
        NOT EXISTS (select * from MGI_SetMember s, MGI_SetMember_EMAPA e
                where s._set_key = v_setKey 
                and s._object_key = v_objectKey 
                and s._createdby_key = v_userKey
                and s._setmember_key = e._setmember_key
                and e._stage_key = v_stageKey) THEN

	        INSERT INTO MGI_SetMember
	        SELECT v_newSetMemberKey, v_setKey, v_objectKey, v_label, v_newSeqKey, v_userKey, v_userKey, now(), now()
	        ;

                INSERT INTO MGI_SetMember_EMAPA
                SELECT v_newSetMemberEmapaKey, v_newSetMemberKey, v_stageKey, v_userKey, v_userKey, now(), now()
                ;

        RETURN;

END IF;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION MGI_addSetMember(int,int,int,text,int) TO public;

COMMENT ON FUNCTION mgd.MGI_addSetMember(int,int,int,text,int) IS 'add set member to mgi_setmember & mgi_setmember_emapa';

EOSQL
