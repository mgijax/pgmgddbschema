#!/bin/sh

#
# History
#
# 11/22/2016	lec
#	- TR12463/add exception for ALL_Allele
#
# 04/04/2016    lec 
#       - TR12314/remove wild-type alleles
#
# 02/11/2016	lec
#	- TR12245/add MGI_Relationship deletes
#
# 06/30/2004	lec
#	- TR 5998
#
# 08/26/2003	lec
#	- TR 4708
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/MRK_deleteWithdrawal_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION MRK_deleteWithdrawal (
v_userKey int,
v_oldKey int,
v_refsKey int,
v_eventReasonKey int
)
RETURNS VOID AS
\$\$

DECLARE
v_oldName mrk_marker.name%TYPE;

BEGIN

--
-- This procedure will process a delete withdrawal.
-- A delete marker withdrawal requires:
--	a) the "old" marker key
--	b) a reference key
--

IF EXISTS (SELECT 1 FROM ALL_Allele WHERE _Marker_key = v_oldKey and isWildType = 0)
THEN
        RAISE EXCEPTION E'\nMRK_deleteWithdrawal: Cannot Delete:  Marker is referenced by Allele.';
        RETURN;
END IF;

v_oldName := (SELECT name FROM MRK_Marker
	 WHERE _Organism_key = 1
	 AND _Marker_Status_key = 1
	 AND _Marker_key = v_oldKey);

-- Update MGD offset of old symbol

UPDATE MRK_Offset SET cmoffset = -999.0 WHERE _Marker_key = v_oldKey and source = 0;

IF NOT FOUND
THEN
	RAISE EXCEPTION E'MRK_deleteWithdrawal: Could not update offset of old symbol';
	RETURN;
END IF;

-- Update Marker info

UPDATE MRK_Marker 
SET name = 'withdrawn', _Marker_Status_key = 2 , 
	_ModifiedBy_key = v_userKey, modification_date = now() 
WHERE _Marker_key = v_oldKey
;

IF NOT FOUND
THEN
	RAISE EXCEPTION E'MRK_deleteWithdrawal: Could not update marker';
	RETURN;
END IF;

-- Add History line for withdrawal
PERFORM MRK_insertHistory (v_userKey, v_oldKey, v_oldKey, v_refsKey, 6, v_eventReasonKey, v_oldName);

IF NOT FOUND
THEN
	RAISE EXCEPTION E'MRK_deleteWithdrawal: Could not add history';
	RETURN;
END IF;

-- Remove old symbol's wild type allele
DELETE FROM ALL_Allele a
USING MRK_Marker m
WHERE m._Marker_key = v_oldKey
AND m._Marker_key = a._Marker_key
AND a.isWildType = 1 
;

-- Remove MGI_Relationships that are annotated to this Marker

CREATE TEMP TABLE toDelete ON COMMIT DROP
AS SELECT r._Relationship_key
FROM MGI_Relationship r, MGI_Relationship_Category c
WHERE r._Object_key_1 = v_oldKey
AND r._Category_key  = c._Category_key
AND c._MGIType_key_1 = 2
UNION
SELECT r._Relationship_key
FROM MGI_Relationship r, MGI_Relationship_Category c
WHERE r._Object_key_2 = v_oldKey
AND r._Category_key  = c._Category_key
AND c._MGIType_key_2 = 2
;

DELETE 
FROM MGI_Relationship
USING toDelete d
WHERE d._Relationship_key = MGI_Relationship._Relationship_key
;

RETURN;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION MRK_deleteWithdrawal(int,int,int,int) TO public;

COMMENT ON FUNCTION mgd.MRK_deleteWithdrawal(int,int,int,int) IS 'process a marker deletion';

EOSQL
