#!/bin/sh

#
# History
#
# 06/30/2004	lec
#	- TR 5998
#
# 08/26/2003	lec
#	- TR 4708
#

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

DROP FUNCTION MRK_deleteWithdrawal(int,int,int);

CREATE OR REPLACE FUNCTION MGI_insertReferenceAssoc (
v_oldKey int,
v_refKey int,
v_eventReasonKey int
)
RETURNS VOID AS
\$\$

DECLARE
v_modifiedByKey int;
v_oldSymbol mrk_marker.symbol%TYPE;
v_oldName mrk_marker.name%TYPE;

BEGIN

--
-- This procedure will process a delete withdrawal.
-- A delete marker withdrawal requires:
--	a) the "old" marker key
--	b) a reference key
--

v_modifiedByKey := _User_key from MGI_User where login = current_user;

SELECT symbol as v_oldSymbol,
       name as v_oldName
FROM MRK_Marker 
WHERE _Marker_key = v_oldKey 
     AND _Organism_key = 1
     AND _Marker_Status_key in (1,3)
;

if v_oldSymbol is null
THEN
	RAISE EXCEPTION E'Invalid Old Symbol Key %1!", v_oldKey
	RETURN;
END IF;

-- Update MGD offset of old symbol

UPDATE MRK_Offset SET offset = -999.0 WHERE _Marker_key = v_oldKey and source = 0;

IF NOT FOUND
THEN
	RAISE EXCEPTION E'MRK_deleteWithdrawal: Could not update offset of old symbol';
	RETURN;
END IF;

-- Update Marker info

UPDATE MRK_Marker 
SET name = 'withdrawn', _Marker_Status_key = 2 , _ModifiedBy_key = v_modifiedByKey, modification_date = current_date 
WHERE _Marker_key = v_oldKey

IF NOT FOUND
THEN
	RAISE EXCEPTION E'MRK_deleteWithdrawal: Could not update marker';
	RETURN;
END IF;

-- Add History line for withdrawal
PERFORM MRK_insertHistory (v_oldKey, v_oldKey, v_refKey, 6, v_eventReasonKey, v_oldName);

IF NOT FOUND
THEN
	RAISE EXCEPTION E'MRK_deleteWithdrawal: Could not add history';
	RETURN;
END IF;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION MRK_deleteWithdrawal(int,int,int) TO public;

COMMENT ON FUNCTION mgd.MRK_deleteWithdrawal(int,int,int) IS 'creates a new acc_accessionreference row';

EOSQL
