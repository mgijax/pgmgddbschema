#!/bin/sh

#
# History
#
# 06/30/2004	lec
#	- TR 5998
#
# 08/26/2003	lec
#	- TR 4708
#

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

DROP FUNCTION MRK_deleteWithdrawal(int,int,int);

CREATE OR REPLACE FUNCTION MGI_insertReferenceAssoc (
v_oldKey int,
v_refKey int,
v_eventReasonKey int
)
RETURNS VOID AS
\$\$

DECLARE
v_modifiedByKey int;
v_oldSymbol varchar(50)
v_oldName varchar(255)

BEGIN

--
-- This procedure will process a delete withdrawal.
-- A delete marker withdrawal requires:
--	a) the "old" marker key
--	b) a reference key
--

select v_modifiedByKey = _User_key from MGI_User where login = user_name()

select v_oldSymbol = symbol,
       v_oldName = name 
from MRK_Marker where _Marker_key = v_oldKey 
     and _Organism_key = 1
     and _Marker_Status_key in (1,3)

if v_oldSymbol is null
begin
	raiserror 99999 "Invalid Old Symbol Key %1!", v_oldKey
	rollback transaction
	return
end

/* Update MGD offset of old symbol */

update MRK_Offset set offset = -999.0 where _Marker_key = v_oldKey and source = 0

if @@error != 0
begin
	raiserror 99999 "Could not update offset of old symbol in MRK_deleteWithdrawal"
	rollback transaction
	return
end

/* Update Marker info */

update MRK_Marker
set name = "withdrawn", _Marker_Status_key = 2, _ModifiedBy_key = v_modifiedByKey, modification_date = getdate()
where _Marker_key = v_oldKey

if @@error != 0
begin
	raiserror 99999 "Could not update marker in MRK_deleteWithdrawal"
	rollback transaction
	return
end

/* Add History line for withdrawal */
exec MRK_insertHistory v_oldKey, v_oldKey, v_refKey, 6, v_eventReasonKey, v_oldName

if @@error != 0
begin
	raiserror 99999 "Could not add history in MRK_deleteWithdrawal"
	rollback transaction
	return
end


go

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION MRK_deleteWithdrawal(int,int,int) TO public;

COMMENT ON FUNCTION mgd.MRK_deleteWithdrawal(int,int,int) IS 'creates a new acc_accessionreference row';

EOSQL
