#!/bin/sh

#
# History
#
# lec	05/24/2017
#       - TR12240/12083/varchar to text
#
# lec	08/27/2014
#	- TR11654/remove obsolete TR1270/IMAGE sp
#
# lec	07/10/2008
#	- TR9125; gene model check
#
# 04/16/2007 jsb - added dbradt
#
# lec	01/22/2007
#	- add djr, ljm, ksf, tbreddy, yz permissions
#
# lec	01/18/2006
#	- TR 7182; increased prefixPart to 30
#
# lec 02/15/2005
#	- permissions
#
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/ACC_update_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION ACC_update (
v_userKey int,
v_accKey int,
v_accID acc_accession.accid%TYPE,
v_origRefsKey int DEFAULT -1,
v_refsKey int DEFAULT -1
)
RETURNS VOID AS
\$\$

DECLARE
v_prefixPart acc_accession.prefixPart%TYPE;
v_numericPart acc_accession.prefixPart%TYPE;

BEGIN

--
-- NAME: ACC_update
--
-- DESCRIPTION:
--        
-- To update an ACC_Accession, ACC_AccessionReference records
--
-- INPUT:
--      
-- v_userKey     : MGI_User._User_key
-- v_accKey      : ACC_Accession._Accession_key
-- v_accID       : ACC_Accession.accID
-- v_origRefsKey : original ACC_AccessionReference._Refs_key
-- v_refsKey     : new ACC_AccessionReference._Refs_key
--
-- RETURNS:
--	VOID
--      

v_numericPart := '';

IF v_accID IS NULL
THEN
	select ACC_delete_byAccKey (v_accKey);
ELSE

        IF (select count(accid) from acc_accession 
                where _mgitype_key = 10 and _logicaldb_key = v_logicalDB and accid = v_accID
                group by _logicaldb_key, accid having count(*) >= 1)
        THEN
                RAISE EXCEPTION E'Cannot assign same Registry:Accession Id to > 1 Strain';
                RETURN;
        END IF;

        -- split accession id INTO prefixPart/numericPart

        SELECT * FROM ACC_split(v_accID) INTO v_prefixPart, v_numericPart;

	IF (v_prefixPart = 'J:' or substring(v_prefixPart,1,4) = 'MGD-')
	THEN
		IF (select count(*) from ACC_Accession
		    where numericPart = v_numericPart::integer
			  and prefixPart = v_prefixPart) >= 1
		THEN
                        RAISE EXCEPTION E'Duplicate MGI Accession Number';
                        RETURN;
		END IF;

	END IF;

	IF v_numericPart = ''
	THEN
		update ACC_Accession
	       	set accID = v_accID,
		   	prefixPart = v_prefixPart,
		   	numericPart = null,
		   	_ModifiedBy_key = v_userKey,
		   	modification_date = now()
	       	where _Accession_key = v_accKey;
        ELSE
		update ACC_Accession
	       	set accID = v_accID,
		   	prefixPart = v_prefixPart,
		   	numericPart = v_numericPart::integer,
		   	_ModifiedBy_key = v_userKey,
		   	modification_date = now()
	       	where _Accession_key = v_accKey;
	END IF;

	IF v_refsKey > 0
	THEN
		update ACC_AccessionReference
		       set _Refs_key = v_refsKey,
		           _ModifiedBy_key = v_userKey,
		           modification_date = now()
		           where _Accession_key = v_accKey and _Refs_key = v_origRefsKey;
	END IF;

END IF;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION ACC_update(int,int,text,int,int) TO public;

COMMENT ON FUNCTION mgd.ACC_update(int,int,text,int,int) IS 'update acc_accession row';

EOSQL
