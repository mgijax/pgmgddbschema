#!/bin/sh

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/ACC_assignJ_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION ACC_assignJ (
v_userKey int,
v_objectKey int,
v_nextMGI int DEFAULT -1
)
RETURNS VOID AS
\$\$

DECLARE
j_exists int;

BEGIN

--
-- NAME: ACC_assignJ
--
-- DESCRIPTION:
--        
-- To assign a new J: to a Reference
--
-- 1:Calls ACC_assignMGI() sending prefixPart = 'J:'
--
-- 2:If BIB_Workflow_Data.extractedText contains 'supplemental' text
--	then set supplemental = 'Db found supplement' (31576675)
--	else set supplemental = 'Db supplement not found' (31576676)
--
-- INPUT:
--      
-- v_userKey   : MGI_User._User_key
-- v_objectKey : ACC_Accession._Object_key
-- v_nextMGI   : if -1, then ACC_assignMGI() will use the next available J:
--		 else, try to use the v_nextMGI as the J: (an override)
--
-- RETURNS:
--	VOID
--      
--

IF v_nextMGI != -1
THEN
	j_exists := count(*) FROM BIB_Acc_View
		WHERE prefixPart = 'J:' AND
			_LogicalDB_key = 1 AND
			numericPart = v_nextMGI;

	IF j_exists > 0
	THEN
		RAISE EXCEPTION E'This J Number is already in use: %', j_exists;
		RETURN;
	END IF;
END IF;

PERFORM ACC_assignMGI (v_userKey, v_objectKey, 'Reference', 'J:', v_nextMGI);

--
-- BIB_Workflow_Data.extractedText._Supplemental_key : see (2:BIB_Workflow_Data above)
--
-- 'supplemental' 
-- 'supplementary' 
-- 'supplement ' (space important)
-- 'additional file'
--

IF (select count(*) from BIB_Workflow_Data 
	where _Refs_key = v_objectKey
	and (lower(extractedText) like lower('%supplemental%')
		or lower(extractedText) like lower('%supplementary%')
		or lower(extractedText) like lower('%supplement %')
		or lower(extractedText) like lower('%additional file%')
		)) = 1
THEN
	UPDATE BIB_Workflow_Data set _Supplemental_key = 31576675, _modifiedby_key = v_userKey, modification_date = now()
	where _Refs_key = v_objectKey;
	UPDATE BIB_Refs set _modifiedby_key = v_userKey, modification_date = now()
	where _Refs_key = v_objectKey;
ELSE
	UPDATE BIB_Workflow_Data set _Supplemental_key = 31576676, _modifiedby_key = v_userKey, modification_date = now()
	where _Refs_key = v_objectKey;
	UPDATE BIB_Refs set _modifiedby_key = v_userKey, modification_date = now()
	where _Refs_key = v_objectKey;
END IF;

RETURN;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION ACC_assignJ(int,int,int) TO public;

COMMENT ON FUNCTION mgd.ACC_assignJ(int,int,int) IS 'creates a new J: in the acc_accession table';

EOSQL
