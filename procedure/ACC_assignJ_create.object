#!/bin/sh

#
# This file was generated automatically by dbschemaScripts.py -- edit with care.
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/ACC_assignJ_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION ACC_assignJ (
v_userKey int,
v_objectKey int,
v_nextMGI int DEFAULT -1
)
RETURNS VOID AS
\$\$

DECLARE
j_exists int;

BEGIN

IF v_nextMGI != -1
THEN
	j_exists := count(*) FROM BIB_Acc_View
		WHERE prefixPart = 'J:' AND
			_LogicalDB_key = 1 AND
			numericPart = v_nextMGI;

	IF j_exists > 0
	THEN
		RAISE EXCEPTION E'This J Number is already in use: %', j_exists;
		RETURN;
	END IF;
END IF;

PERFORM ACC_assignMGI (v_userKey, v_objectKey, 'Reference', 'J:', v_nextMGI);

RETURN;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION ACC_assignJ(int,int,int) TO public;

COMMENT ON FUNCTION mgd.ACC_assignJ(int,int,int) IS 'creates a new J: in the acc_accession table';

EOSQL
