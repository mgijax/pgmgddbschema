#!/bin/sh

#
# History
#
# 08/09/2017    lec
#       - TR12250/Lit Triage
#
# Purpose:
#	To delete/reload the BIB_Citation_Cache
#
#	1. by individual reference
#
#	2. if v_refsKey = -1, process all references
#
#	3. if v_refsKey = -2, process references that do not exist in the cache
#
#	4. if needed, add v_refsKey = -3, process references modified during a particular date/time
#

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/BIB_reloadCache_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION BIB_reloadCache (
v_refsKey int DEFAULT -1
)
RETURNS VOID AS
\$\$

BEGIN

IF (v_refsKey = -1)
THEN

CREATE TEMP TABLE toAdd ON COMMIT DROP
AS SELECT r._Refs_key, null::int as numericPart, null::text as jnumID, a.accID, null::text as pubmedID, null::text as doiID, 
r.journal, 
coalesce(r.journal, '') || ' ' || coalesce(r.date, '') || ';' ||  
coalesce(r.vol, '') || '(' || coalesce(r.issue, '') || '):' ||  
coalesce(r.pgs, '') as citation, 
coalesce(r._primary, '') || ', ' || coalesce(r.journal, '') || ' ' ||  
coalesce(r.date, '') || ';' || coalesce(r.vol, '') || '(' ||  
coalesce(r.issue, '') || '):' || coalesce(r.pgs, '') as short_citation,
s.term as referenceType, 
r.isReviewArticle, 
case when isReviewArticle = 1 then 'Yes' else 'No' end,
r.isDiscard
FROM BIB_Refs r, VOC_Term s, ACC_Accession a
WHERE r._ReferenceType_key = s._Term_key 
AND r._Refs_key = a._Object_key 
AND a._MGIType_key = 1 
AND a._LogicalDB_key = 1 
AND a.prefixPart =  'MGI:'
;

DELETE FROM BIB_Citation_Cache;

ELSIF (v_refsKey = -2)
THEN

CREATE TEMP TABLE toAdd ON COMMIT DROP
AS SELECT r._Refs_key, null::int as numericPart, null::text as jnumID, a.accID, null::text as pubmedID, null::text as doiID, 
r.journal, 
coalesce(r.journal, '') || ' ' || coalesce(r.date, '') || ';' ||  
coalesce(r.vol, '') || '(' || coalesce(r.issue, '') || '):' ||  
coalesce(r.pgs, '') as citation, 
coalesce(r._primary, '') || ', ' || coalesce(r.journal, '') || ' ' ||  
coalesce(r.date, '') || ';' || coalesce(r.vol, '') || '(' ||  
coalesce(r.issue, '') || '):' || coalesce(r.pgs, '') as short_citation,
s.term as referenceType, 
r.isReviewArticle, 
case when isReviewArticle = 1 then 'Yes' else 'No' end,
r.isDiscard
FROM BIB_Refs r, VOC_Term s, ACC_Accession a
WHERE r._ReferenceType_key = s._Term_key 
AND r._Refs_key = a._Object_key 
AND a._MGIType_key = 1 
AND a._LogicalDB_key = 1 
AND a.prefixPart =  'MGI:'
AND not exists (select 1 from BIB_Citation_Cache c where r._Refs_key = c._Refs_key)
;

DELETE FROM BIB_Citation_Cache r
USING toAdd t
WHERE t._Refs_key = r._Refs_key
;

ELSE

CREATE TEMP TABLE toAdd ON COMMIT DROP
AS SELECT r._Refs_key, null::int as numericPart, null::text as jnumID, a.accID, null::text as pubmedID, null::text as doiID, 
r.journal, 
coalesce(r.journal, '') || ' ' || coalesce(r.date, '') || ';' ||  
coalesce(r.vol, '') || '(' || coalesce(r.issue, '') || '):' ||  
coalesce(r.pgs, '') as citation, 
coalesce(r._primary, '') || ', ' || coalesce(r.journal, '') || ' ' ||  
coalesce(r.date, '') || ';' || coalesce(r.vol, '') || '(' ||  
coalesce(r.issue, '') || '):' || coalesce(r.pgs, '') as short_citation,
s.term as referenceType, 
r.isReviewArticle, 
case when isReviewArticle = 1 then 'Yes' else 'No' end,
r.isDiscard
FROM BIB_Refs r, VOC_Term s, ACC_Accession a
WHERE r._ReferenceType_key = s._Term_key 
AND r._Refs_key = a._Object_key 
AND a._MGIType_key = 1 
AND a._LogicalDB_key = 1 
AND a.prefixPart =  'MGI:'
AND r._Refs_key = v_refsKey
;

DELETE FROM BIB_Citation_Cache WHERE _Refs_key = v_refsKey;

END IF;

CREATE INDEX toAdd_idx1 ON toAdd(_Refs_key);

INSERT INTO BIB_Citation_Cache SELECT * from toAdd
;

UPDATE BIB_Citation_Cache r
SET numericPart = a.numericPart, jnumID = a.accID
FROM toAdd t, ACC_Accession a 
WHERE t._Refs_key = r._Refs_key
AND r._Refs_key = a._Object_key 
AND a._MGIType_key = 1 
AND a._LogicalDB_key = 1 
AND a.prefixPart = 'J:' 
AND a.preferred = 1 
;

UPDATE BIB_Citation_Cache r
SET pubmedID = a.accID
FROM toAdd t, ACC_Accession a 
WHERE t._Refs_key = r._Refs_key
AND r._Refs_key = a._Object_key 
AND a._MGIType_key = 1 
AND a._LogicalDB_key = 29
AND a.preferred = 1 
;

UPDATE BIB_Citation_Cache r
SET doiID = a.accID
FROM toAdd t, ACC_Accession a 
WHERE t._Refs_key = r._Refs_key
AND r._Refs_key = a._Object_key 
AND a._MGIType_key = 1 
AND a._LogicalDB_key = 65
AND a.preferred = 1 
;


END;

\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION BIB_reloadCache(int) TO public;

COMMENT ON FUNCTION mgd.BIB_reloadCache(int) IS 'reload BIB_Citation_Cache table by object or all';

EOSQL
