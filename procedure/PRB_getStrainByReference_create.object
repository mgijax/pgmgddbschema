#!/bin/sh

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/procedure/PRB_getStrainByReference_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

CREATE OR REPLACE FUNCTION PRB_getStrainByReference (
v_refsKey int
)
RETURNS TABLE (
	_Strain_key int,
	strain text
) AS
\$\$

BEGIN

CREATE TEMP TABLE strains ON COMMIT DROP
AS SELECT DISTINCT m._Strain_key
FROM MLD_Expts e, MLD_InSitu m
WHERE e._Refs_key = v_refsKey
AND e._Expt_key = m._Expt_key
UNION
SELECT DISTINCT m._Strain_key
FROM MLD_Expts e, MLD_FISH m
WHERE e._Refs_key = v_refsKey
AND e._Expt_key = m._Expt_key
UNION
SELECT DISTINCT c._femaleStrain_key
FROM MLD_Expts e, MLD_Matrix m, CRS_Cross c
WHERE e._Refs_key = v_refsKey
AND e._Expt_key = m._Expt_key
AND m._Cross_key = c._Cross_key
UNION
SELECT DISTINCT c._maleStrain_key
FROM MLD_Expts e, MLD_Matrix m, CRS_Cross c
WHERE e._Refs_key = v_refsKey
AND e._Expt_key = m._Expt_key
AND m._Cross_key = c._Cross_key
UNION
SELECT DISTINCT c._StrainHO_key
FROM MLD_Expts e, MLD_Matrix m, CRS_Cross c
WHERE e._Refs_key = v_refsKey
AND e._Expt_key = m._Expt_key
AND m._Cross_key = c._Cross_key
UNION
SELECT DISTINCT c._StrainHT_key
FROM MLD_Expts e, MLD_Matrix m, CRS_Cross c
WHERE e._Refs_key = v_refsKey
AND e._Expt_key = m._Expt_key
AND m._Cross_key = c._Cross_key
UNION
SELECT DISTINCT s._Strain_key
FROM GXD_Genotype s, GXD_Expression x
WHERE x._Refs_key = v_refsKey
AND x._Genotype_key = s._Genotype_key
UNION
SELECT DISTINCT s._Strain_key
FROM PRB_Reference r, PRB_RFLV v, PRB_Allele a, PRB_Allele_Strain s
WHERE r._Refs_key = v_refsKey
AND r._Reference_key = v._Reference_key
AND v._RFLV_key = a._RFLV_key
AND a._Allele_key = s._Allele_key
UNION
SELECT DISTINCT a._Strain_key
FROM ALL_Allele a, MGI_Reference_Assoc r
WHERE r._Refs_key = v_refsKey
AND r._Object_key = a._Allele_key
AND r._MGIType_key = 11
;
 
RETURN QUERY
SELECT t._Strain_key, t.strain
FROM strains s, PRB_Strain t
WHERE s._Strain_key = t._Strain_key
ORDER BY t.strain
;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION PRB_getStrainByReference(int) TO public;

COMMENT ON FUNCTION mgd.PRB_getStrainByReference(int) IS 'SELECT all strains for a given reference';

EOSQL
