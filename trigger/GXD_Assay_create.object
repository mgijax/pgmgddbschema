#!/bin/csh -f -x

#
# HISTORY
#
# 09/16/2010	lec
#	- TR9695/eurexpress/only call probeprep deletion if not used by another assay
#
# 03/19/2009	lec
#	- TR 9558; do NOT add 
#	In situ reporter (transgenic): 10
#	Recombinase reporter: 11
#	only allow (1,2,3,4,5,6,8,9)
#
# 09/28/2006	lec
#	- TR 7918; added BIB_DataSet_Assc insert
#

cd `dirname $0` && source ./Configuration

cat - <<EOSQL | ${MGI_DBUTILS}/bin/doisql.csh ${DBSERVER} ${DBNAME} $0

use ${DBNAME}
go

create trigger GXD_Assay_Insert
on GXD_Assay
for insert
as
 
declare @key integer
select @key = _Assay_key from inserted

/* Assign MGI Accession number for Assay */
exec ACC_assignMGI @key, "Assay"
 
if (@@error != 0)
begin
  rollback transaction
  return
end
 
if not exists (select 1 from inserted i, BIB_DataSet_Assoc b
	where i._Refs_key = b._Refs_key
	and b._DataSet_key = 1004)
   and (select i._AssayType_key from inserted i) in (1,2,3,4,5,6,8,9)
begin
    declare @assocKey integer
    select @assocKey = max(_Assoc_key) + 1 from BIB_DataSet_Assoc
    insert into BIB_DataSet_Assoc
    	select @assocKey, i._Refs_key, 1004, 0, i._CreatedBy_key, i._ModifiedBy_key, getdate(), getdate() from inserted i
end

go

create trigger GXD_Assay_Update
on GXD_Assay
for update
as
 
declare @key integer
select @key = _Assay_key from inserted

/* Update Expression Cache for Assay */
/* The update of a GXD_Assay record should be called AFTER any updates to GXD detail records */

exec GXD_loadCacheByAssay @key


go

create trigger GXD_Assay_Delete
on GXD_Assay
for delete
as

delete GXD_Specimen from GXD_Specimen, deleted
where GXD_Specimen._Assay_key = deleted._Assay_key
 
delete GXD_GelLane from GXD_GelLane, deleted
where GXD_GelLane._Assay_key = deleted._Assay_key
 
delete GXD_GelRow from GXD_GelRow, deleted
where GXD_GelRow._Assay_key = deleted._Assay_key
 
delete GXD_AssayNote from GXD_AssayNote, deleted
where GXD_AssayNote._Assay_key = deleted._Assay_key
 
delete GXD_Expression from GXD_Expression, deleted
where GXD_Expression._Assay_key = deleted._Assay_key

-- only delete the probe prep if it is not used by another assay
-- that is, if count = 1

if (select count(*) from GXD_Assay, deleted
    where GXD_Assay._ProbePrep_key = deleted._ProbePrep_key) = 0
begin
  delete GXD_ProbePrep from GXD_ProbePrep, deleted
  where GXD_ProbePrep._ProbePrep_key = deleted._ProbePrep_key
end

delete GXD_AntibodyPrep from GXD_AntibodyPrep, deleted
where GXD_AntibodyPrep._AntibodyPrep_key = deleted._AntibodyPrep_key

delete ACC_Accession
from ACC_Accession a, deleted
where a._Object_key = deleted._Assay_key
and a._MGIType_key = 8
 

go

checkpoint
go

quit

EOSQL
