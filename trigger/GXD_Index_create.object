#!/bin/sh

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

--
-- NAME: GXD_Index_insert()
--
-- DESCRIPTOIN:
--
--	add BIB_DataSet_Assoc, if necessary
--
-- INPUT:
--	none
--
-- RETURNS:
--	NEW
--

DROP TRIGGER IF EXISTS GXD_Index_insert_trigger ON GXD_Index;
DROP FUNCTION IF EXISTS GXD_Index_insert();

CREATE OR REPLACE FUNCTION GXD_Index_insert() RETURNS TRIGGER AS \$\$

DECLARE
v_assocKey int;

BEGIN

IF NOT EXISTS (SELECT 1 FROM BIB_DataSet_Assoc b
        WHERE NEW._Refs_key = b._Refs_key
        AND b._DataSet_key = 1004)
THEN
    v_assocKey := max(_Assoc_key) + 1 from BIB_DataSet_Assoc;

    INSERT INTO BIB_DataSet_Assoc 
	VALUES(v_assocKey, NEW._Refs_key, 1004, 0, 0, NEW._CreatedBy_key, NEW._ModifiedBy_key, now(), now())
    ;
END IF;

RETURN NEW;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION GXD_Index_insert() TO public;

CREATE TRIGGER GXD_Index_insert_trigger
AFTER INSERT on GXD_Index
FOR EACH ROW
EXECUTE PROCEDURE GXD_Index_insert();

COMMENT ON FUNCTION mgd.GXD_Index_insert() IS 'creates an insert trigger to call acc_assignmgi()/default values';

EOSQL
