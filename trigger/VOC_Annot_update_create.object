#!/bin/sh

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

--
-- NAME: VOC_Annot_update()
--
-- DESCRIPTOIN:
--
-- TR5721/propagate modification date and modified by to all evidence records
-- 	when the annotation term is modified.
--
-- INPUT:
--	none
--
-- RETURNS:
--	NEW
--

DROP TRIGGER IF EXISTS VOC_Annot_update_trigger ON VOC_Annot;
DROP FUNCTION IF EXISTS VOC_Annot_update();

CREATE OR REPLACE FUNCTION VOC_Annot_update() RETURNS TRIGGER AS \$\$

BEGIN

UPDATE VOC_Evidence
SET modification_date = current_date, _ModifiedBy_key = VOC_Evidence._ModifiedBy_key
WHERE NEW._Annot_key = VOC_Evidence._Annot_key
;

RETURN NEW;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION VOC_Annot_update() TO public;

CREATE TRIGGER VOC_Annot_update_trigger
AFTER UPDATE on VOC_Annot
FOR EACH ROW
EXECUTE PROCEDURE VOC_Annot_update();

COMMENT ON FUNCTION mgd.VOC_Annot_update() IS 'creates an update trigger to call voc_annot';

EOSQL
