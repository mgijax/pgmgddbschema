#!/bin/csh -f -x

#
# History
#
# 03/28/2011	lec
#	- remove permission checks for individual users
#
# 10/19/2006	lec
#	- TR 7533; add GO_Tracking
#
# 03/16/2006	lec
#	- TR 7530; remove MLD_Marker
#
# 11/16/2005	lec
#	- TR 7124; ALL_Knockout_Cache
#
# 11/16/2005	lec
#	- TR 7124; ALL_Knockout_Cache
#
# 12/09/2004	lec
#	- TR 5686; MRK_Other replaced by MGI_Synonym
#
# 08/26/2003	lec
#	- TR 4708
#
# 07/31/2003	lec
#	- TR 4832; WKS_Rosetta
#
# 04/07/2003	lec
#	- TR 3608; MGI Notes
#
# 02/20/2003	lec
# 	- TR 1892; MRK_Label
#
# 12/09/2002	lec
#	- TR 3928; prevent deletion of RIKEN (Fantom2) markers
#
# 12/06/2002	lec
#	- remove autoadd to MRK_Chromosome
#
# 08/14/2002 	lec
#	- TR 1463; renamed Species to Organism
#
#
# lec   07/22/2002
# lec   07/18/2002
#       TR 3588 - added call to ALL_createWildType to MRK_Marker_Insert
#
# 05/13/2002	lec
#	- TR 1463; SAO
#
# 11/26/2001 lec
#	TR 3148 - backout change from TR 2952; changes are updating name during
#	nomenclature "rename" event and user does not want this.
#

cd `dirname $0` && source ./Configuration

cat - <<EOSQL | ${MGI_DBUTILS}/bin/doisql.csh ${DBSERVER} ${DBNAME} $0

use ${DBNAME}
go

create trigger MRK_Marker_Insert
on MRK_Marker
for insert
as

declare @markerKey integer
select @markerKey = _Marker_key from inserted
declare @symbol varchar(30)
select @symbol = symbol from inserted

/* For Mouse Organism, create Accession #, Current Symbol records */

if (select _Organism_key from inserted) = 1
begin
	insert MRK_Current (_Current_key, _Marker_key) 
		select _Marker_key, _Marker_key from inserted

	if (@@error != 0)
	begin
  	  rollback transaction
  	  return
	end

	/* For Genes only.... */

	if (select _Marker_Type_key from inserted) = 1
	begin
		insert into GO_Tracking (_Marker_key, isReferenceGene)
		select _Marker_key, 0 from inserted
	end

	/* For Genes only.... */
	/* and other restrictions - see TR 3588 */

	if (select _Marker_Type_key from inserted) = 1
            and (select symbol from inserted) not like 'mt-%'
            and (select symbol from inserted) not like '%Rik'
            and (select name from inserted) not like 'withdrawn, =%'
            and (select name from inserted) not like 'RIKEN%'
	    and (select name from inserted) not like '%dna segment%'
            and (select name from inserted) not like 'EST %'
            and (select name from inserted) not like '%expressed%'
            and (select name from inserted) not like '%cDNA sequence%'
            and (select name from inserted) not like '%gene model%'
            and (select name from inserted) not like '%hypothetical protein%'
            and (select name from inserted) not like '%ecotropic viral integration site%'
            and (select name from inserted) not like '%mitochondrial ribosomal protein%'
            and (select name from inserted) not like '%viral polymerase%'
            and (select name from inserted) not like 'ribosomal protein%'
	begin
		exec ALL_createWildType @markerKey, @symbol

		if (@@error != 0)
		begin
  	  		rollback transaction
  	  		return
		end
	end
end

go

create trigger MRK_Marker_Update
on MRK_Marker
for update
as

if @@rowcount = 1
begin

	declare @markerKey integer
	select @markerKey = _Marker_key from inserted

	/* If no Current symbol exists for the Marker, then abort */

	if (select _Organism_key from inserted) = 1
	  and not exists (select 1 from MRK_Current where _Marker_key = @markerKey)
	begin
		rollback transaction
		raiserror 99999 "Marker Symbol must have a Current Symbol."
		return
	end

	if update(symbol) and 
	   (select _Organism_key from inserted) = 1
	begin
		declare @newSymbol varchar(50)
		declare @oldSymbol varchar(50)
		select @newSymbol = symbol from inserted
		select @oldSymbol = symbol from deleted
		exec ALL_convertAllele @markerKey, @oldSymbol, @newSymbol
		exec NOM_updateReserved @newSymbol
	end

	/* for non-mouse species .... */
	/* for mouse we have to be careful because of nomenclature events... */

	if (update(symbol) or update(name))
	   and
	   (select _Organism_key from inserted) != 1
	begin
		exec MRK_reloadLabel @markerKey
	end

       /* If updating chromosome and changing from unknown to known, update offset to -1 */

       if (select _Organism_key from inserted) = 1 and update (chromosome)
       begin
              if (select chromosome from deleted) = "UN" and
                 (select chromosome from inserted) != "UN"
	       begin
        	       update MRK_Offset set offset = -1
        	       from inserted
        	       where inserted._Marker_key = MRK_Offset._Marker_key and MRK_Offset.source = 0
	       end
       end
end

go

create trigger MRK_Marker_Delete
on MRK_Marker
for delete
as

if @@rowcount = 1
begin

/* TR 2225 - Permissions for deletion of Markers */

if (select user_name()) not in ('mgd_dbo', 'dbo') and
   (select _Organism_key from deleted) = 1
begin
	rollback transaction
	raiserror 99999 "You do not have permission to delete this record."
	return
end

if (select user_name()) not in ('mgd_dbo', 'dbo', 'djr') and
   (select _Organism_key from deleted) != 1
begin
	rollback transaction
	raiserror 99999 "You do not have permission to delete this record."
	return
end
                 
/* Cannot delete records w/ reference of J:80000 (RIKEN; Fantom2) */

if exists (select * from deleted d, MRK_Reference r
    	   where d._Marker_key = r._Marker_key and r._Refs_key = 80961)
begin
	rollback transaction
        raiserror 99999 "Marker record is referenced by J:80000.  Cannot delete this record."
        return
end

/* Cannot delete records w/ reference of J:65060 (RIKEN; Fantom1) */

if exists (select * from deleted d, MRK_Reference r
    	   where d._Marker_key = r._Marker_key and r._Refs_key = 66006)
begin
	rollback transaction
        raiserror 99999 "Marker record is referenced by J:65060.  Cannot delete this record."
        return
end

/* Disallow deletion if Marker is currently referenced elsewhere */

if exists (select * from ALL_Knockout_Cache, deleted
    where ALL_Knockout_Cache._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Allele Knockout Cache Record(s)"
	return
end

if exists (select * from MRK_Alias, deleted
    where MRK_Alias._Alias_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Alias Record(s)"
	return
end

/* Symbol cannot be deleted if it is the current symbol of another Marker */

if exists (select * from MRK_Current, deleted
         where MRK_Current._Current_key = deleted._Marker_key and
		MRK_Current._Marker_key != deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Current Symbol Record(s)"
	return
end

if exists (select * from MRK_History, deleted
         where MRK_History._History_key = deleted._Marker_key and
               MRK_History._Marker_key != deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in History Record(s)"
	return
end

if exists (select * from PRB_Marker, deleted
         where PRB_Marker._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Probe Marker Record(s)"
	return
end

if exists (select * from PRB_RFLV, deleted
         where PRB_RFLV._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Probe RFLV Record(s)"
	return
end

if exists (select * from MLD_Expt_Marker, deleted
         where MLD_Expt_Marker._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in MLDP Experiment Marker Record(s)"
	return
end

if exists (select * from MLD_Concordance, deleted
         where MLD_Concordance._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in MLDP Hybrid Concordance Record(s)"
	return
end

if exists (select * from MLD_MC2point, deleted
         where MLD_MC2point._Marker_key_1 = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in MLDP Cross 2 Point Record(s)"
	return
end

if exists (select * from MLD_MC2point, deleted
         where MLD_MC2point._Marker_key_2 = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in MLDP Cross 2 Point Record(s)"
	return
end

if exists (select * from MLD_RIData, deleted
         where MLD_RIData._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in MLDP RI Data Record(s)"
	return
end

if exists (select * from MLD_RI2Point, deleted
         where MLD_RI2Point._Marker_key_1 = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in MLDP Cross 2 Point Record(s)"
	return
end

if exists (select * from MLD_RI2Point, deleted
         where MLD_RI2Point._Marker_key_2 = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in MLDP Cross 2 Point Record(s)"
	return
end

if exists (select * from MLD_Distance, deleted
         where MLD_Distance._Marker_key_1 = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Physical Mapping Record(s)"
	return
end

if exists (select * from MLD_Distance, deleted
         where MLD_Distance._Marker_key_2 = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Physical Mapping Record(s)"
	return
end

if exists (select * from HMD_Homology_Marker, deleted
         where HMD_Homology_Marker._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Homology Record(s)"
	return
end

if exists (select * from MLC_Text, deleted
         where MLC_Text._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in MLC Edit Record(s)"
	return
end

if exists (select * from MLC_Marker, deleted
         where MLC_Marker._Marker_key_2 = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in MLC Edit Record(s)"
	return
end

if exists (select * from CRS_Matrix, deleted
         where CRS_Matrix._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Cross Matrix Record(s)"
	return
end

if exists (select * from GXD_Index, deleted
         where GXD_Index._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in GXD Index Record(s)"
	return
end

if exists (select * from GXD_AllelePair, deleted
         where GXD_AllelePair._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in GXD Allele Pair Record(s)"
	return
end

if exists (select * from GXD_AntibodyMarker, deleted
         where GXD_AntibodyMarker._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in GXD Antibody Marker Record(s)"
	return
end

if exists (select * from GXD_Assay, deleted
         where GXD_Assay._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in GXD Assay Record(s)"
	return
end

if exists (select * from PRB_Strain_Marker, deleted
    where PRB_Strain_Marker._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Strain Record(s)"
	return
end

if exists (select 1 from VOC_Annot a, VOC_AnnotType t, deleted d
    where d._Marker_key = a._Object_key
    and a._AnnotType_key = t._AnnotType_key
    and t._MGIType_key = 2)
begin
        rollback transaction
        raiserror 99999 "Marker is referenced in Annotation Record(s)"
        return
end

if exists (select * from WKS_Rosetta, deleted
    where WKS_Rosetta._Marker_key = deleted._Marker_key)
begin
	rollback transaction
	raiserror 99999 "Marker Symbol is referenced in Silver's Rosetta Stone Record(s)"
	return
end

end /* rowcount = 1 */

delete ALL_Allele from ALL_Allele a, deleted d, ALL_Marker_Assoc s
where s._Marker_key = d._Marker_key
    and s._Allele_key = a._Allele_key

delete ALL_Marker_Assoc from ALL_Marker_Assoc s, deleted d
where s._Marker_key = d._Marker_key

delete GO_Tracking from GO_Tracking m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Alias from MRK_Alias m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Anchors from MRK_Anchors m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Classes from MRK_Classes m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Current from MRK_Current m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_History from MRK_History m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Homology_Cache from MRK_Homology_Cache m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Label from MRK_Label m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Location_Cache from MRK_Location_Cache m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Notes from MRK_Notes m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Offset from MRK_Offset m, deleted d
where m._Marker_key = d._Marker_key

delete MRK_Reference from MRK_Reference m, deleted d
where m._Marker_key = d._Marker_key

delete MGI_Note from MGI_Note m, deleted d
where m._MGIType_key = 2
and m._Object_key = d._Marker_key

delete MGI_Reference_Assoc from MGI_Reference_Assoc m, deleted d
where m._MGIType_key = 2
and m._Object_key = d._Marker_key

delete MGI_Synonym from MGI_Synonym m, deleted d
where m._MGIType_key = 2
and m._Object_key = d._Marker_key

delete SEQ_Marker_Cache from SEQ_Marker_Cache m, deleted d
where m._Marker_key = d._Marker_key

delete ACC_Accession from ACC_Accession a, deleted d
where a._Object_key = d._Marker_key and a._MGIType_key = 2


go

checkpoint
go

quit

EOSQL
