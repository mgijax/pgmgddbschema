#!/bin/sh

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

--
-- NAME: GXD_Assay_delete()
--
-- DESCRIPTOIN:
--	
-- the template creates a trigger for all tables that use:
--	_Object_key
--	_MGIType_key
--
-- because these tables cannot use referencial integrity due
-- to the fact that their primary key is not necessarily the
-- member of the _Object_key/_MGIType_key table
--
-- . remove the statements that are not active for your table
-- . add the statements that are being active for your table
--
-- or you may keep all statements in the trigger even if your table
-- does not currently utilize them.
--
-- An example of a table that only needs ACC_Accession : MGI_Organism
--
-- INPUT:
--	none
--
-- RETURNS:
--	NEW
--

DROP TRIGGER IF EXISTS GXD_Assay_delete_trigger ON GXD_Assay;
DROP FUNCTION GXD_Assay_delete();

CREATE OR REPLACE FUNCTION GXD_Assay_delete() RETURNS TRIGGER AS \$\$
BEGIN

DELETE FROM MAP_Coord_Feature a
WHERE a._Object_key = OLD._Assay_key
AND a._MGIType_key = 8
;

DELETE FROM MAP_Coordinate a
WHERE a._Object_key = OLD._Assay_key
AND a._MGIType_key = 8
;

DELETE FROM MGI_Note a
WHERE a._Object_key = OLD._Assay_key
AND a._MGIType_key = 8
;

DELETE FROM MGI_Reference_Assoc a
WHERE a._Object_key = OLD._Assay_key
AND a._MGIType_key = 8
;

DELETE FROM MGI_Synonym a
WHERE a._Object_key = OLD._Assay_key
AND a._MGIType_key = 8
;

DELETE FROM IMG_ImagePane_Assoc a
WHERE a._Object_key = OLD._Assay_key
AND a._MGIType_key = 8
;

DELETE FROM ACC_Accession a
WHERE a._Object_key = OLD._Assay_key
AND a._MGIType_key = 8
;

RETURN NEW;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION GXD_Assay_delete() TO public;

CREATE TRIGGER GXD_Assay_delete_trigger
AFTER DELETE on GXD_Assay
FOR EACH ROW
EXECUTE PROCEDURE GXD_Assay_delete();

COMMENT ON FUNCTION mgd.GXD_Assay_delete() IS 'creates a delete trigger for this _Object_key/_MGIType_key table';

EOSQL
