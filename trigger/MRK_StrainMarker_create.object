#!/bin/sh

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

DROP TRIGGER IF EXISTS MRK_StrainGene_delete_trigger ON MRK_StrainGene;
DROP FUNCTION IF EXISTS MRK_StrainGene_delete();

CREATE OR REPLACE FUNCTION MRK_StrainGene_delete() RETURNS TRIGGER AS \$\$
BEGIN

--
-- NAME: MRK_StrainGene_delete()
--
-- DESCRIPTOIN:
--	
-- the template creates a trigger for all tables that use:
--	_Object_key
--	_MGIType_key
--
-- because these tables cannot use referencial integrity due
-- to the fact that their primary key is not necessarily the
-- member of the _Object_key/_MGIType_key table
--
-- . remove the statements that are not active for your table
-- . add the statements that are being active for your table
--
-- or you may keep all statements in the trigger even if your table
-- does not currently utilize them.
--
-- An example of a table that only needs ACC_Accession : MGI_Organism
--
-- INPUT:
--	none
--
-- RETURNS:
--	NEW
--

IF EXISTS (SELECT * FROM MAP_Coord_Feature a
          WHERE OLD._StrainGene_key = a._Object_key
          AND a._MGIType_key = 44)
THEN
        RAISE EXCEPTION E'Strain-Gene is referenced in MAP_Coord_Feature table';
END IF; 

DELETE FROM IMG_ImagePane_Assoc a
WHERE a._Object_key = OLD._StrainGene_key
AND a._MGIType_key = 44
;

DELETE FROM MAP_Coord_Feature a
WHERE a._Object_key = OLD._StrainGene_key
AND a._MGIType_key = 44
;

DELETE FROM MAP_Coordinate a
WHERE a._Object_key = OLD._StrainGene_key
AND a._MGIType_key = 44
;

DELETE FROM MGI_Note a
WHERE a._Object_key = OLD._StrainGene_key
AND a._MGIType_key = 44
;

DELETE FROM MGI_Property a
WHERE a._Object_key = OLD._StrainGene_key
AND a._MGIType_key = 44
;

DELETE FROM MGI_Reference_Assoc a
WHERE a._Object_key = OLD._StrainGene_key
AND a._MGIType_key = 44
;

DELETE FROM MGI_Synonym a
WHERE a._Object_key = OLD._StrainGene_key
AND a._MGIType_key = 44
;

DELETE FROM ACC_Accession a
WHERE a._Object_key = OLD._StrainGene_key
AND a._MGIType_key = 44
;

RETURN NEW;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION MRK_StrainGene_delete() TO public;

CREATE TRIGGER MRK_StrainGene_delete_trigger
AFTER DELETE on MRK_StrainGene
FOR EACH ROW
EXECUTE PROCEDURE MRK_StrainGene_delete();

COMMENT ON FUNCTION mgd.MRK_StrainGene_delete() IS 'creates a delete trigger for this _Object_key/_MGIType_key table';

EOSQL

