#!/bin/sh

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

--
-- NAME: ALL_Allele_insert()
--
-- DESCRIPTOIN:
--
--	this insert trigger will call ACC_assignMGI
--	in order to add a distinct MGI accession id
--	to the NEW object
--
-- RULES:
--
-- 1) You do not have permission to add an 'Autoload' Allele.
-- 2) Approved Allele Symbol must have an Approved Marker
-- 3) You do not have permission to add a 'Deleted' Allele.
--
-- INPUT:
--	none
--
-- RETURNS:
--	NEW
--

DROP TRIGGER IF EXISTS ALL_Allele_insert_trigger ON ALL_Allele;
DROP FUNCTION IF EXISTS ALL_Allele_insert();

CREATE OR REPLACE FUNCTION ALL_Allele_insert() RETURNS TRIGGER AS \$\$

DECLARE
v_approvedStatus int;
v_autoloadStatus int;

BEGIN

v_approvedStatus := 847114;
v_autoloadStatus := 3983021;

-- Cannot use the Autoload status

IF (SELECT _Allele_Status_key from OLD.v_autoloadStatus)
THEN
        RAISE EXCEPTION E'You do not have permission to add an \'Autoload\' Allele.';
END IF;

-- Approved Alleles must have a valid MGD Marker, unless they are
-- gene trap alleles (which can have no marker)

IF (SELECT OLD._Allele_Status_key = v_approvedStatus)
   AND
   ((SELECT OLD._Marker_key IS NULL) OR (SELECT OLD._Marker_key = -1))
   AND
   (SELECT OLD._Allele_Type_key != 847121)
THEN
        RAISE EXCEPTION E'Approved Allele Symbol must have an Approved Marker';
END IF;

PERFORM ACC_assignMGI(NEW._Allele_key, 'Allele');

RETURN NEW;

END;
\$\$
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION ALL_Allele_insert() TO public;

CREATE TRIGGER ALL_Allele_insert_trigger
AFTER INSERT on ALL_Allele
FOR EACH ROW
EXECUTE PROCEDURE ALL_Allele_insert();

COMMENT ON FUNCTION mgd.ALL_Allele_insert() IS 'creates an insert trigger to call acc_assignmgi()/default values';

EOSQL
