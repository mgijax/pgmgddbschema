#!/bin/csh -f

#
# History
# 12/04/2012 - jsb - added checks for MRK_Cluster foreign keys (TR6519)
# 06/30/2011	lec
#	- TR 10044; added VOC_Evidence_Property
#
# 08/24/2009	lec
#	- TR 9300; added GXD_Index._ConditionalMutants_key
#
# 10/19/2006	lec
#	- TR 6812; added VOC_GO_Cache
#
# 04/02/2003	lec
#	- TR 4564; 2.96
#

cd `dirname $0` && source ./Configuration

cat - <<EOSQL | ${MGI_DBUTILS}/bin/doisql.csh ${DBSERVER} ${DBNAME} $0

use ${DBNAME}
go

create trigger VOC_Term_Insert
on VOC_Term
for insert
as

if (select v._LogicalDB_key from VOC_Vocab v, inserted i
	where v._Vocab_key = i._Vocab_key) = 1
begin
	declare @key int
	declare @isPrivate bit
	select @key = _Term_key from inserted
	select @isPrivate = isPrivate from VOC_Vocab v, inserted i where v._Vocab_key = i._Vocab_key
	exec ACC_assignMGI @key, "Vocabulary Term", @private = @isPrivate

	if (@@error != 0)
	begin
		rollback transaction
		return
	end
end

go

create trigger VOC_Term_Delete
on VOC_Term
for delete
as

/* Disallow deletion if Term is cross-referenced elsewhere */

if @@rowcount = 1
begin

if exists (select 1 from ALL_Allele a, deleted d
    where d._Term_key = a._Mode_key)
begin
        rollback transaction
        raiserror 99999 "Allele Mode is referenced in Allele Record(s)"
        return
end

if exists (select 1 from ALL_Allele a, deleted d
    where d._Term_key = a._Allele_Type_key)
begin
        rollback transaction
        raiserror 99999 "Allele Type is referenced in Allele Record(s)"
        return
end

if exists (select 1 from ALL_Allele a, deleted d
    where d._Term_key = a._Allele_Status_key)
begin
        rollback transaction
        raiserror 99999 "Allele Status is referenced in Allele Record(s)"
        return
end

if exists (select 1 from ALL_Allele_Mutation a, deleted d
    where d._Term_key = a._Mutation_key)
begin
        rollback transaction
        raiserror 99999 "Allele Mutation is referenced in Allele Record(s)"
        return
end

if exists (select 1 from ALL_CellLine_Derivation a, deleted d
    where d._Term_key = a._Creator_key)
begin
        rollback transaction
        raiserror 99999 "Creator is referenced in Cell Line Derivation"
        return
end

if exists (select 1 from ALL_CellLine_Derivation a, deleted d
    where d._Term_key = a._DerivationType_key)
begin
        rollback transaction
        raiserror 99999 "Derivation Type is referenced in Cell Line Derivation"
        return
end

if exists (select 1 from ALL_CellLine_Derivation a, deleted d
    where d._Term_key = a._VectorType_key)
begin
        rollback transaction
        raiserror 99999 "Vector Type is referenced in Cell Line Derivation"
        return
end

if exists (select 1 from ALL_CellLine_Derivation a, deleted d
    where d._Term_key = a._Vector_key)
begin
        rollback transaction
        raiserror 99999 "Vector is referenced in Cell Line Derivation"
        return
end

if exists (select 1 from ALL_Marker_Assoc a, deleted d
    where d._Term_key = a._Qualifier_key)
begin
        rollback transaction
        raiserror 99999 "Qualifier Term is used in Marker/Allele Association"
        return
end

if exists (select 1 from GXD_Assay a, deleted d
    where d._Term_key = a._ReporterGene_key)
begin
        rollback transaction
        raiserror 99999 "Reporter Gene is referenced in GXD Assay Record(s)"
        return
end

if exists (select 1 from GXD_Genotype a, deleted d
    where d._Term_key = a._ExistsAs_key)
begin
        rollback transaction
        raiserror 99999 "Exists As term is referenced in Genotype Record(s)"
        return
end

if exists (select 1 from GXD_Index a, deleted d
    where d._Term_key = a._Priority_key)
begin
        rollback transaction
        raiserror 99999 "GXD Priority is referenced in GXD Index Record(s)"
        return
end

if exists (select 1 from GXD_Index a, deleted d
    where d._Term_key = a._ConditionalMutants_key)
begin
        rollback transaction
        raiserror 99999 "GXD Conditional Mutants is referenced in GXD Index Record(s)"
        return
end

if exists (select 1 from GXD_Index_Stages a, deleted d
    where d._Term_key = a._StageID_key)
begin
        rollback transaction
        raiserror 99999 "GXD Stage is referenced in GXD Index Stage Record(s)"
        return
end

if exists (select 1 from GXD_Index_Stages a, deleted d
    where d._Term_key = a._IndexAssay_key)
begin
        rollback transaction
        raiserror 99999 "GXD Index Assay is referenced in GXD Index Stage Record(s)"
        return
end

if exists (select 1 from IMG_Image a, deleted d
    where d._Term_key = a._ImageType_key)
begin
        rollback transaction
        raiserror 99999 "Image Type is referenced in Image Record(s)"
        return
end

if exists (select 1 from MAP_Coordinate a, deleted d
    where d._Term_key = a._Units_key)
begin
        rollback transaction
        raiserror 99999 "Units referenced in Map Coordinate Record(s)"
        return
end

if exists (select 1 from MAP_Coordinate a, deleted d
    where d._Term_key = a._MapType_key)
begin
        rollback transaction
        raiserror 99999 "Map Type referenced in Map Coordinate Record(s)"
        return
end

if exists (select 1 from MRK_Marker a, deleted d
    where d._Term_key = a._CurationState_key)
begin
        rollback transaction
        raiserror 99999 "Curation State is referenced in Marker Record(s)"
        return
end

if exists (select 1 from MRK_Cluster a, deleted d
    where d._Term_key = a._ClusterSource_key)
begin
        rollback transaction
        raiserror 99999 "Cluster Source is referenced in Marker Cluster Record(s)"
        return
end

if exists (select 1 from MRK_Cluster a, deleted d
    where d._Term_key = a._ClusterType_key)
begin
        rollback transaction
        raiserror 99999 "Cluster Type is referenced in Marker Cluster Record(s)"
        return
end

if exists (select 1 from NOM_Marker a, deleted d
    where d._Term_key = a._NomenStatus_key)
begin
        rollback transaction
        raiserror 99999 "Nomen Status is referenced in Nomenclature Record(s)"
        return
end

if exists (select 1 from NOM_Marker a, deleted d
    where d._Term_key = a._CurationState_key)
begin
        rollback transaction
        raiserror 99999 "Curation State is referenced in Nomenclature Record(s)"
        return
end

if exists (select 1 from PRB_Probe a, deleted d
    where d._Term_key = a._SegmentType_key)
begin
        rollback transaction
        raiserror 99999 "Segment Type is referenced in Molecular Segment Record(s)"
        return
end

if exists (select 1 from PRB_Probe a, deleted d
    where d._Term_key = a._Vector_key)
begin
        rollback transaction
        raiserror 99999 "Vector Type is referenced in Molecular Segment Record(s)"
        return
end

if exists (select 1 from PRB_Source a, deleted d
    where d._Term_key = a._SegmentType_key)
begin
        rollback transaction
        raiserror 99999 "Segment Type is referenced in Molecular Source Record(s)"
        return
end

if exists (select 1 from PRB_Source a, deleted d
    where d._Term_key = a._Vector_key)
begin
        rollback transaction
        raiserror 99999 "Vector Type is referenced in Molecular Source Record(s)"
        return
end

if exists (select 1 from PRB_Source a, deleted d
    where d._Term_key = a._Gender_key)
begin
        rollback transaction
        raiserror 99999 "Gender is referenced in Molecular Source Record(s)"
        return
end

if exists (select 1 from PRB_Source a, deleted d
    where d._Term_key = a._CellLine_key)
begin
        rollback transaction
        raiserror 99999 "Cell Line is referenced in Molecular Source Record(s)"
        return
end

if exists (select 1 from PRB_Strain a, deleted d
    where d._Term_key = a._Species_key)
begin
        rollback transaction
        raiserror 99999 "Strain Species is referenced in Strain Record(s)"
        return
end

if exists (select 1 from VOC_Annot va, VOC_AnnotType vat, deleted d
    where d._Term_key = va._Term_key
    and va._AnnotType_key = vat._AnnotType_key
    and vat._MGIType_key = 10)
begin
        rollback transaction
        raiserror 99999 "Term is referenced in Strain Record(s)"
        return
end

if exists (select 1 from SEQ_Sequence a, deleted d
    where d._Term_key = a._SequenceType_key)
begin
        rollback transaction
        raiserror 99999 "Sequence Type is referenced in Sequence Record(s)"
        return
end

if exists (select 1 from SEQ_Sequence a, deleted d
    where d._Term_key = a._SequenceStatus_key)
begin
        rollback transaction
        raiserror 99999 "Sequence Status is referenced in Sequence Record(s)"
        return
end

if exists (select 1 from SEQ_Sequence a, deleted d
    where d._Term_key = a._SequenceQuality_key)
begin
        rollback transaction
        raiserror 99999 "Sequence Quality is referenced in Sequence Record(s)"
        return
end

if exists (select 1 from SEQ_Sequence_Assoc a, deleted d
    where d._Term_key = a._Qualifier_key)
begin
        rollback transaction
        raiserror 99999 "Sequence Association Qualifier is referenced in Sequence Record(s)"
        return
end

if exists (select 1 from SEQ_Marker_Cache a, deleted d
    where d._Term_key = a._Qualifier_key)
begin
        rollback transaction
        raiserror 99999 "Representative Sequence Qualifier referenced in Sequence/Marker Cache Record(s)"
        return
end

if exists (select 1 from VOC_Annot a, deleted d
    where d._Term_key = a._Term_key)
begin
        rollback transaction
        raiserror 99999 "Vocab Term is referenced in Vocab Annotation Record(s)"
        return
end

if exists (select 1 from VOC_AnnotHeader a, deleted d
    where d._Term_key = a._Term_key)
begin
        rollback transaction
        raiserror 99999 "Vocab Term is referenced in Vocab Annotation Header Record(s)"
        return
end

if exists (select 1 from VOC_Evidence a, deleted d
    where d._Term_key = a._EvidenceTerm_key)
begin
        rollback transaction
        raiserror 99999 "Evidence Term is referenced in Vocab Annotation Record(s)"
        return
end

if exists (select 1 from VOC_Evidence_Property a, deleted d
    where d._Term_key = a._PropertyTerm_key)
begin
        rollback transaction
        raiserror 99999 "Evidence/Property Term is referenced in Vocab/Evidence Annotation Record(s)"
        return
end

end

delete MGI_Note from MGI_Note m, deleted d
where m._Object_key = d._Term_key
and m._MGIType_key = 13

delete MGI_Synonym from MGI_Synonym m, deleted d
where m._Object_key = d._Term_key
and m._MGIType_key = 13

delete VOC_GO_Cache from VOC_GO_Cache v, deleted d
where v._Term_key = d._Term_key

delete VOC_Text from VOC_Text v, deleted d
where v._Term_key = d._Term_key

delete ACC_Accession 
from ACC_Accession a, deleted d
where a._Object_key = d._Term_key
and a._MGIType_key = 13
 
go

checkpoint
go

quit

EOSQL
