#!/bin/sh

#
# the template creates a trigger for all tables that use:
#	_Object_key
#	_MGIType_key
#
# because these tables cannot use referencial integrity due
# to the fact that their primary key is 
#
# . remove the statements that are not active for your table
# . add the statements that are being active for your table
#
# or you may keep all statements in the trigger even if your table
# does not currently utilize them.
#

cd `dirname $0` && . ./Configuration

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh ${MGD_DBSERVER} ${MGD_DBNAME} $0

CREATE OR REPLACE FUNCTION check_all_delete(objectKey int, mgiTypeKey int) RETURNS TRIGGER AS '
BEGIN

DELETE FROM MGI_SetMember a
USING MGI_SetMember t
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
AND a._Set_key = t._Set_key
;

DELETE FROM MGI_Translation a
USING MGI_TranslationType t
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
and a._TranslationType_key = t._TranslationType_key
;

DELETE FROM VOC_Annot a
USING VOC_AnnotType t
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
AND a._AnnotType_key = t._AnnotType_key
;

DELETE FROM MGI_AttributeHistory a
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
;

DELETE FROM MGI_Note a
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
;

DELETE FROM MGI_Reference_Assoc a
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
;

DELETE FROM MGI_Synonym a
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
;

DELETE FROM IMG_ImagePane_Assoc a
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
;

DELETE FROM IMG_Cache a
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
;

DELETE FROM ACC_AccessionReference ar
USING ACC_Accession a
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
AND a._Accession_key = ar._Accession_key
;

DELETE FROM ACC_Accession a
WHERE a._Object_key = OLD.PG-KEY
AND a._MGIType_key = mgiTypeKey
;

RETURN NEW;

END;
'
LANGUAGE plpgsql;

GRANT EXECUTE ON FUNCTION check_all_delete() TO public;

DROP TRIGGER check_PG-TABLE_delete_trigger ON PG-TABLE;

CREATE TRIGGER check_PG-TABLE_delete_trigger
AFTER DELETE on PG-TABLE
FOR EACH ROW
EXECUTE PROCEDURE check_PG-TABLE_delete();

EOSQL
