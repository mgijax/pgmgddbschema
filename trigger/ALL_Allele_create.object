#!/bin/csh -f

#
# History
#
# lec	12/17/2009
#	- TR 9935/add GO check
#	  this will compare the allele MGI ID to the GO Annotation "inferred from" field
#	  if there is a match, then the allele status cannot be changed
#
# lec	09/29/2009
#	- TR 9808; check _Marker_key = -1
#	  this should fix the marker key checks that worked prior to gtlf
#
# lec	08/14/2009
#	- QA#2403/turn off update check of required marker assoc
#
# lec	06/18/2009
#	- TR 7493; permission changes
#
# lec	03/18/2009
#	- TR 7493; add checks for autoload status
#
# 02/13/2009 - removed ALL_Cache
# 12/12/2007 - jsb - modified to manage ALL_Cache & SEQ_Allele_Assoc
#
# lec	01/31/2007
#	- TR 8137; cannot change allele status if allele has strain/genotype associations
#
# lec	11/16/2005
#	- TR 7124; ALL_Knockout_Cache
#
# lec	02/10/2005
#	- TR 6343; new permissions implementation
#

cd `dirname $0` && source ./Configuration

cat - <<EOSQL | ${MGI_DBUTILS}/bin/doisql.csh ${DBSERVER} ${DBNAME} $0

use ${DBNAME}
go

create trigger ALL_Allele_Insert
on ALL_Allele
for insert
as

-- Ignore multi-row data

if @@rowcount > 1
        return

declare @userKey integer
select @userKey = _User_key from MGI_User where login = user_name()

declare @pendingStatus integer
select @pendingStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'In Progress'

declare @reservedStatus integer
select @reservedStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'Reserved'

declare @approvedStatus integer
select @approvedStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'Approved'

declare @autoloadStatus integer
select @autoloadStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'Autoload'

declare @deletedStatus integer
select @deletedStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'Deleted'

/* Cannot use the Autoload status */

if (select _Allele_Status_key from inserted) = @autoloadStatus
begin
	rollback transaction
	raiserror 99999 "You do not have permission to add an 'Autoload' Allele."
	return
end

/* Approved Alleles must have a valid MGD Marker, unless they are
 * gene trap alleles (which can have no marker)
 */

if (select _Allele_Status_key from inserted) = @approvedStatus
   and
   ((select _Marker_key from inserted) is null or (select _Marker_key from inserted) = -1)
   and
   (select _Allele_Type_key from inserted) != 847121
begin
	rollback transaction
	raiserror 99999 "Approved Allele Symbol must have an Approved Marker"
	return
end

if (select user_name()) not in ('mgd_dbo', 'dbo')
   and
   (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'nomen:merges, renames')
begin

  /* deleted */
  if (select _Allele_Status_key from inserted) = @deletedStatus
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to add a 'Deleted' Allele."
	return
  end

  /* pending */
  if (select _Allele_Status_key from inserted) = @pendingStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify pending')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to add an 'In Progress' Allele."
	return
  end

  /* reserved */
  if (select _Allele_Status_key from inserted) = @reservedStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify reserved')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to add a 'Reserved' Allele."
	return
  end

  /* approved */
  if (select _Allele_Status_key from inserted) = @approvedStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify approved')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to add an 'Approved' Allele."
	return
  end

end

declare @key integer
select @key = _Allele_key from inserted
exec ACC_assignMGI @key, "Allele"

if (@@error != 0)
begin
	rollback transaction
	return
end

go

create trigger ALL_Allele_Update
on ALL_Allele
for update
as

-- Ignore multi-row data 

if @@rowcount > 1
	return

declare @userKey integer
select @userKey = _User_key from MGI_User where login = user_name()

declare @pendingStatus integer
select @pendingStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'In Progress'

declare @reservedStatus integer
select @reservedStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'Reserved'

declare @approvedStatus integer
select @approvedStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'Approved'

declare @autoloadStatus integer
select @autoloadStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'Autoload'

declare @deletedStatus integer
select @deletedStatus = t._Term_key from VOC_Term t, VOC_Vocab v
	where v.name = 'Allele Status'
	and v._Vocab_key = t._Vocab_key
	and t.term = 'Deleted'

/* Approved/Autoload Alleles must have a valid MGD Marker, unless they are
 * gene trap alleles (which can have no marker)
 */

/*
if (select _Allele_Status_key from inserted) in (@approvedStatus,@autoloadStatus)
   and
   ((select _Marker_key from inserted) is null or (select _Marker_key from inserted) = -1)
   and
   (select _Allele_Type_key from inserted) != 847121
begin
	rollback transaction
	raiserror 99999 "Approved/Autoload Allele Symbol must have an Approved Marker"
	return
end
*/

/* GO check: approved/autoload */
if (select _Allele_Status_key from deleted) in (@approvedStatus,@autoloadStatus)
   and
   (select _Allele_Status_key from inserted) in (@pendingStatus,@deletedStatus,@reservedStatus)
   and 
   exists (select 1 from deleted d, VOC_Annot a, VOC_Evidence e, ACC_Accession aa
	where a._AnnotType_key = 1000
	and a._Object_key = d._Marker_key
	and a._Annot_key = e._Annot_key
	and e.inferredFrom = aa.accID
	and aa._MGIType_key = 11
	and aa._Object_key = d._Allele_key)
begin
	rollback transaction
	raiserror 99999 "You cannot change the Allele status from\nApproved/Autoload to Deleted, Reserved or Pending.\n\nThis Allele is cross-referenced to a GO annotation."
	return
end

/* Non-Approved Alleles cannot have Genotypes or Strain associations */

if (select _Allele_Status_key from inserted) not in (@approvedStatus,@autoloadStatus)
begin
    if exists (select * from GXD_AlleleGenotype, inserted
	    where GXD_AlleleGenotype._Allele_key = inserted._Allele_key)
    begin
	    rollback transaction
	    raiserror 99999 "Allele Symbol is referenced in GXD Allele Pair Record(s); Approved/Autoload Status cannot be changed."
	    return
    end

    if exists (select * from MLD_Expt_Marker, inserted
	    where MLD_Expt_Marker._Allele_key = inserted._Allele_key)
    begin
	    rollback transaction
	    raiserror 99999 "Allele Symbol is referenced in Mapping Experiment Marker Record(s); Approved/Autoload Status cannot be changed."
	    return
    end

    if exists (select * from PRB_Strain_Marker, inserted
	    where PRB_Strain_Marker._Allele_key = inserted._Allele_key)
    begin
	    rollback transaction
	    raiserror 99999 "Allele Symbol is referenced in Strain/Allele Record(s); Approved/Autoload Status cannot be changed."
	    return
    end
end

/* if not privileged user and we're not just updating the modification date/user */
/* then we need to check permissions. */

if (select user_name()) not in ('mgd_dbo', 'dbo')
   and
   (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'nomen:merges, renames')
   and
   (update(_Marker_key) or update(_Strain_key) 
    or update(_Mode_key) or update(_Allele_Type_key) or update(_Allele_Status_key)
    or update(symbol) or update(name) or update(nomenSymbol)
    or update(_ApprovedBy_key) or update(approval_date))
begin

  /* pending */
  if (select _Allele_Status_key from deleted) = @pendingStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify pending')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to modify an Allele with In Progress status."
	return
  end

  if (select _Allele_Status_key from deleted) = @pendingStatus
     and
     (select @userKey) in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify pending if owner')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to modify this Allele."
	return
  end

  /* reserved */
  if (select _Allele_Status_key from deleted) = @reservedStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify reserved')
     and 
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify reserved if owner')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to modify an Allele with Reserved status."
	return
  end

  if (select _Allele_Status_key from deleted) = @reservedStatus
     and
     (select @userKey) in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify reserved if owner')
     and
     (select _CreatedBy_key from deleted) != @userKey
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to modify this Allele."
	return
  end

  /* approved/autoload */
  if (select _Allele_Status_key from deleted) in (@approvedStatus,@autoloadStatus)
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify approved')
     and 
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify approved if owner')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to modify an Allele with Approved/Autoload status."
	return
  end

  if (select _Allele_Status_key from deleted) in (@approvedStatus,@autoloadStatus)
     and
     (select @userKey) in (select _User_key from MGI_UserTask_View where usertask = 'pheno:create/modify approved if owner')
     and
     (select _CreatedBy_key from deleted) != @userKey
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to modify this Allele."
	return
  end

  /* pending to approved */
  if (select _Allele_Status_key from deleted) = @pendingStatus
     and
     (select _Allele_Status_key from inserted) in (@approvedStatus,@autoloadStatus)
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change pending to approved')
     and 
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change pending to approved if owner')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to change the Allele status from Pending to Approved/Autoload."
	return
  end

  if (select _Allele_Status_key from deleted) = @pendingStatus
     and
     (select _Allele_Status_key from inserted) in (@approvedStatus,@autoloadStatus)
     and
     (select @userKey) in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change pending to approved if owner')
  	     and
     (select _CreatedBy_key from deleted) != @userKey
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to modify this Allele."
	return
  end

  /* pending/deleted to reserved */
  if (select _Allele_Status_key from deleted) in (@pendingStatus,@deletedStatus)
     and
     (select _Allele_Status_key from inserted) = @reservedStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change pending/deleted to reserved')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to change the Allele status from Pending or Deleted to Reserved."
	return
  end

  /* pending to deleted */
  if (select _Allele_Status_key from deleted) = @pendingStatus
     and
     (select _Allele_Status_key from inserted) = @deletedStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change pending to deleted')
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change pending to deleted if owner')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to change the Allele status from Pending to Deleted."
	return
  end

  if (select _Allele_Status_key from deleted) = @pendingStatus
     and
     (select _Allele_Status_key from inserted) = @deletedStatus
     and
     (select @userKey) in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change pending to deleted if owner')
     and
     (select _CreatedBy_key from deleted) != @userKey
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to modify this Allele."
	return
  end

  /* reserved to deleted */
  if (select _Allele_Status_key from deleted) = @reservedStatus
     and
     (select _Allele_Status_key from inserted) = @deletedStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change reserved to deleted')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to change the Allele status from Reserved to Deleted."
	return
  end

  /* deleted/reserved to pending/approved */
  if (select _Allele_Status_key from deleted) in (@deletedStatus,@reservedStatus)
     and
     (select _Allele_Status_key from inserted) in (@pendingStatus,@approvedStatus,@autoloadStatus)
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change deleted/reserved to pending/approved')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to change the Allele status from Deleted or Reserved to Pending or Approved/Autoload."
	return
  end

  /* nomenclature pending */
  if (select _Allele_Status_key from deleted) = @pendingStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:edit nomen data pending')
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:edit nomen data pending if owner')
     and
     (update(_Marker_key) or update(nomenSymbol) or update(symbol) or update(name))
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to update nomenclature for this Allele record."
	return
  end

  if (select _Allele_Status_key from deleted) = @pendingStatus
     and
     (select @userKey) in (select _User_key from MGI_UserTask_View where usertask = 'pheno:edit nomen data pending if owner')
     and
     (select _CreatedBy_key from deleted) != @userKey
     and
     (update(_Marker_key) or update(nomenSymbol) or update(symbol) or update(name))
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to update nomenclature for this Allele record."
	return
  end

  /* nomenclature reserved */
  if (select _Allele_Status_key from deleted) = @reservedStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:edit nomen data reserved')
     and
     (update(_Marker_key) or update(nomenSymbol) or update(symbol) or update(name))
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to update nomenclature for this Allele record."
	return
  end

  /* nomenclature approved */
  if (select _Allele_Status_key from deleted) in (@approvedStatus,@autoloadStatus)
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:edit nomen data approved')
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:edit nomen data approved if owner')
     and
     (update(_Marker_key) or update(nomenSymbol) or update(symbol) or update(name))
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to update nomenclature for this Allele record."
	return
  end

  if (select _Allele_Status_key from deleted) in (@approvedStatus,@autoloadStatus)
     and
     (select @userKey) in (select _User_key from MGI_UserTask_View where usertask = 'pheno:edit nomen data approved if owner')
     and
     (select _CreatedBy_key from deleted) != @userKey
     and
     (update(_Marker_key) or update(nomenSymbol) or update(symbol) or update(name))
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to update nomenclature for this Allele record."
	return
  end

  /* nomenclature deleted */
  if (select _Allele_Status_key from deleted) = @deletedStatus
     and
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:edit nomen data deleted')
     and
     (update(_Marker_key) or update(nomenSymbol) or update(symbol) or update(name))
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to update nomenclature for this Allele record."
	return
  end

  /* approved/autoload to deleted, reserved or pending */
  if (select _Allele_Status_key from deleted) in (@approvedStatus,@autoloadStatus)
     and
     (select _Allele_Status_key from inserted) in (@pendingStatus,@deletedStatus,@reservedStatus)
     and 
     (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change approved to deleted/reserved/pending')
  begin
	rollback transaction
	raiserror 99999 "You do not have permission to change the Allele status from Approved/Autoload to Deleted, Reserved or Pending."
	return
  end

end
/* end if user is not DBO */

/* these changes need to be check for any user (even DBO) */

if (select _Allele_Status_key from deleted) in (@approvedStatus,@autoloadStatus)
   and
   (select _Allele_Status_key from inserted) in (@pendingStatus,@deletedStatus,@reservedStatus)
   and 
   (select @userKey) in (select _User_key from MGI_UserTask_View where usertask = 'pheno:change approved to deleted/reserved/pending')
   and
   (
    exists (select * from GXD_AlleleGenotype a, deleted d where a._Allele_key = d._Allele_key)
    or
    exists (select * from MLD_Expt_Marker a, deleted d where a._Allele_key = d._Allele_key)
    or
    exists (select * from PRB_Strain_Marker a, deleted d where a._Allele_key = d._Allele_key)
   )
begin
	rollback transaction
	raiserror 99999 "You cannot change the Allele status because this Allele is cross-referenced to Genotype, Mapping or Strain data."
	return
end

/* If updating symbol, set needsReview flag for Strain */

if update(symbol)
begin
	declare alleleCursor cursor for
	select _Allele_key from inserted
	for read only

	declare @aKey integer

	open alleleCursor
	fetch alleleCursor into @aKey

	while (@@sqlstatus = 0)
	begin
	    exec PRB_setStrainReview @alleleKey = @aKey
	    fetch alleleCursor into @aKey
	end

	close alleleCursor
	deallocate cursor alleleCursor
end
go

create trigger ALL_Allele_Delete
on ALL_Allele
for delete
as

/* For single row deletes ... */

if @@rowcount = 1
begin
	declare @userKey integer
	select @userKey = _User_key from MGI_User where login = user_name()

	if (select user_name()) not in ('mgd_dbo', 'dbo')
	   and
	   (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'nomen:merges, renames')
	   and
	   (select @userKey) not in (select _User_key from MGI_UserTask_View where usertask = 'pheno:use Delete button')
	begin
		rollback transaction
		raiserror 99999 "You do not have permission to delete this Allele record."
		return
	end

	/* Disallow deletion if Allele is currently referenced elsewhere */

	if exists (select * from ALL_Knockout_Cache, deleted
		where ALL_Knockout_Cache._Allele_key = deleted._Allele_key)
	begin
		rollback transaction
		raiserror 99999 "Allele Symbol is referenced in Allele Knockout Cache Record(s)"
		return
	end

	if exists (select * from GXD_AlleleGenotype, deleted
		where GXD_AlleleGenotype._Allele_key = deleted._Allele_key)
	begin
		rollback transaction
		raiserror 99999 "Allele Symbol is referenced in GXD Allele Pair Record(s)"
		return
	end

	if exists (select * from MLD_Expt_Marker, deleted
		where MLD_Expt_Marker._Allele_key = deleted._Allele_key)
	begin
		rollback transaction
		raiserror 99999 "Allele Symbol is referenced in Mapping Experiment Marker Record(s)"
		return
	end

	if exists (select * from PRB_Strain_Marker, deleted
		where PRB_Strain_Marker._Allele_key = deleted._Allele_key)
	begin
		rollback transaction
		raiserror 99999 "Allele Symbol is referenced in Strain/Allele Record(s)"
		return
	end
end

delete ALL_Allele_Mutation from ALL_Allele_Mutation, deleted
where ALL_Allele_Mutation._Allele_key = deleted._Allele_key

delete ALL_Cre_Cache from ALL_Cre_Cache, deleted
where ALL_Cre_Cache._Allele_key = deleted._Allele_key

delete ALL_Knockout_Cache from ALL_Knockout_Cache, deleted
where ALL_Knockout_Cache._Allele_key = deleted._Allele_key

delete ALL_Label from ALL_Label, deleted
where ALL_Label._Allele_key = deleted._Allele_key

delete MRK_OMIM_Cache from MRK_OMIM_Cache, deleted
where MRK_OMIM_Cache._Allele_key = deleted._Allele_key

delete ALL_Marker_Assoc from ALL_Marker_Assoc a, deleted d
where a._Allele_key = d._Allele_key

delete MGI_Note from MGI_Note, deleted
where MGI_Note._MGIType_key = 11
and MGI_Note._Object_key = deleted._Allele_key

delete MGI_Reference_Assoc from MGI_Reference_Assoc, deleted
where MGI_Reference_Assoc._MGIType_key = 11
and MGI_Reference_Assoc._Object_key = deleted._Allele_key

delete MGI_Synonym from MGI_Synonym, deleted
where MGI_Synonym._MGIType_key = 11
and MGI_Synonym._Object_key = deleted._Allele_key

delete IMG_ImagePane_Assoc from IMG_ImagePane_Assoc, deleted
where IMG_ImagePane_Assoc._MGIType_key = 11
and IMG_ImagePane_Assoc._Object_key = deleted._Allele_key

delete ACC_Accession
from ACC_Accession a, deleted d
where a._Object_key = d._Allele_key
and a._MGIType_key = 11

/* added to manage SEQ_Allele_Assoc, ALL_Allele_CellLine;
 * gene trap LF release (TR7493)
 */

delete SEQ_Allele_Assoc from SEQ_Allele_Assoc a, deleted d
where a._Allele_key = d._Allele_key

delete ALL_Allele_CellLine from ALL_Allele_CellLine a, deleted d
where a._Allele_key = d._Allele_key
go

checkpoint
go

quit

EOSQL
