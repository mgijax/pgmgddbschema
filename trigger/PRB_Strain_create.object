#!/bin/csh -f

#
# History
#
# lec	09/28/2011
#	- found that PRB_Strain_Genotype is missing from delete trigger
#
# lec 	02/14/2011
#	- TR 10584/strain permissions
#
# lec	02/16/2010
#	- TR10026; added llw2
#
# lec	11/06/2006
#	- TR8013; added monikat
#
# lec	02/10/2006
#	 - added MGI_Translation, MGI_Set
#
# lec	05/15/2003
#	- TR 4812; removed pm and sr
#
# lec 01/03/2003
#	- TR 4378; add deletion of annotation
#
# lec 04/02/2002
#	- TR 3524; cannot process a withdrawal due to PRB_Strain_Update
#
# lec 09/26/2001
#	- TR 2541; generate MGI Accession numbers from PRB_Strain_Insert
#	- TR 256; added RI_RISet to PRB_Strain_Delete
#

cd `dirname $0` && source ./Configuration

cat - <<EOSQL | ${MGI_DBUTILS}/bin/doisql.csh ${DBSERVER} ${DBNAME} $0

use ${DBNAME}
go

create trigger PRB_Strain_Insert
on PRB_Strain
for insert
as

if (select count(*) from PRB_Strain, inserted
         where PRB_Strain.strain = inserted.strain) > 1
begin
        print "Potential Duplicate Strain Found"
end
 
if (select standard from inserted) = 1
begin
	declare @key int
	select @key = _Strain_key from inserted
	exec ACC_assignMGI @key, "Strain", @private = 1

	if (@@error != 0)
	begin
		rollback transaction
		return
	end
end

go

create trigger PRB_Strain_Update
on PRB_Strain
for update
as

if @@rowcount > 1
	return

if (select count(*) from PRB_Strain, inserted
         where PRB_Strain.strain = inserted.strain) > 1
begin
        print "Potential Duplicate Strain Found"
end

/* if changing Strain from public to private,  */
/* then the Strain cannot be cross-referenced to any other data set */

if update(private) 
   and (select private from deleted) = 0 
   and (select private from inserted) = 1
begin
	if exists (select * from PRB_Source, deleted
    	where PRB_Source._Strain_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in Molecular Segment Library Record(s)"
		return
	end

	if exists (select * from PRB_Allele_Strain, deleted
         	where PRB_Allele_Strain._Strain_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in RFLP Record(s)"
		return
	end

	if exists (select * from MLD_FISH, deleted
         	where MLD_FISH._Strain_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in FISH Record(s)"
		return
	end
 
	if exists (select * from MLD_InSitu, deleted
         	where MLD_InSitu._Strain_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in InSitu Record(s)"
		return
	end
 
	if exists (select * from CRS_Cross, deleted
         	where CRS_Cross._femaleStrain_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in Cross Record(s)"
		return
	end
 
	if exists (select * from CRS_Cross, deleted
         	where CRS_Cross._maleStrain_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in Cross Record(s)"
		return
	end
 
	if exists (select * from CRS_Cross, deleted
         	where CRS_Cross._StrainHO_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in Cross Record(s)"
		return
	end
 
	if exists (select * from CRS_Cross, deleted
         	where CRS_Cross._StrainHT_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in Cross Record(s)"
		return
	end
 
	if exists (select * from GXD_Genotype, deleted
         	where GXD_Genotype._Strain_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in GXD Genotype Record(s)"
		return
	end
 
	if exists (select * from ALL_Allele, deleted
         	where ALL_Allele._Strain_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in Allele Record(s)"
		return
	end
 
	if exists (select * from ALL_CellLine, deleted
         	where ALL_CellLine._Strain_key = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in Allele Cell Line Record(s)"
		return
	end
 
	if exists (select * from RI_RISet, deleted
         	where RI_RISet._Strain_key_1 = deleted._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in RI Set Record(s)"
		return
	end
 
	if exists (select * from MGI_SetMember sm, MGI_Set s, deleted d
         	where s._MGIType_key = 10
		and s._Set_key = sm._Set_key
		and sm._Object_key = d._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in MGI Set Record(s)"
		return
	end
 
	if exists (select * from MGI_Translation t, MGI_TranslationType tt, deleted d
         	where tt._MGIType_key = 10
		and tt._TranslationType_key = t._TranslationType_key
		and t._Object_key = d._Strain_key)
	begin
        	rollback transaction
        	raiserror 99999 "Strain is referenced in MGI Translation Record(s)"
		return
	end
 
end

/* if changing Strain from "nonstandard" to "standard" and no MGI Acc ID exists */
/* for the Strain, then create it. */

if update(standard) and (select standard from inserted) = 1
	and not exists (select 1 from PRB_Strain_Acc_View v, inserted
		where v._Object_key = inserted._Strain_key
		      and v.prefixPart = "MGI:"
		      and v._LogicalDB_key = 1)
begin
	declare @key int
	select @key = _Strain_key from inserted
	exec ACC_assignMGI @key, "Strain", @private = 1

	if (@@error != 0)
	begin
		rollback transaction
		return
	end
end

go

create trigger PRB_Strain_Delete
on PRB_Strain
for delete
as

/* Disallow deletion if Strain is referenced elsewhere */

if exists (select * from PRB_Source, deleted
    where PRB_Source._Strain_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in Molecular Segment Library Record(s)"
	return
end

if exists (select * from PRB_Allele_Strain, deleted
         where PRB_Allele_Strain._Strain_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in RFLP Record(s)"
	return
end

if exists (select * from MLD_FISH, deleted
         where MLD_FISH._Strain_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in FISH Record(s)"
	return
end
 
if exists (select * from MLD_InSitu, deleted
         where MLD_InSitu._Strain_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in InSitu Record(s)"
	return
end
 
if exists (select * from CRS_Cross, deleted
         where CRS_Cross._femaleStrain_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in Cross Record(s)"
	return
end
 
if exists (select * from CRS_Cross, deleted
         where CRS_Cross._maleStrain_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in Cross Record(s)"
	return
end
 
if exists (select * from CRS_Cross, deleted
         where CRS_Cross._StrainHO_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in Cross Record(s)"
	return
end
 
if exists (select * from CRS_Cross, deleted
         where CRS_Cross._StrainHT_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in Cross Record(s)"
	return
end
 
if exists (select * from GXD_Genotype, deleted
         where GXD_Genotype._Strain_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in GXD Genotype Record(s)"
	return
end
 
if exists (select * from ALL_Allele, deleted
         where ALL_Allele._Strain_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in Allele Record(s)"
	return
end
 
if exists (select * from ALL_CellLine, deleted
         where ALL_CellLine._Strain_key = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in Allele Cell Line Record(s)"
	return
end
 
if exists (select * from RI_RISet, deleted
         where RI_RISet._Strain_key_1 = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in RI Set Record(s)"
	return
end
 
if exists (select * from RI_RISet, deleted
         where RI_RISet._Strain_key_2 = deleted._Strain_key)
begin
        rollback transaction
        raiserror 99999 "Strain is referenced in RI Set Record(s)"
	return
end
 
if exists (select * from MGI_SetMember sm, MGI_Set s, deleted d
       	where s._MGIType_key = 10
	and s._Set_key = sm._Set_key
	and sm._Object_key = d._Strain_key)
begin
       	rollback transaction
       	raiserror 99999 "Strain is referenced in MGI Set Record(s)"
	return
end
 
if exists (select * from MGI_Translation t, MGI_TranslationType tt, deleted d
       	where tt._MGIType_key = 10
	and tt._TranslationType_key = t._TranslationType_key
	and t._Object_key = d._Strain_key)
begin
       	rollback transaction
       	raiserror 99999 "Strain is referenced in MGI Translation Record(s)"
	return
end

delete PRB_Strain_Marker from PRB_Strain_Marker, deleted
where PRB_Strain_Marker._Strain_key = deleted._Strain_key

delete PRB_Strain_Genotype from PRB_Strain_Genotype, deleted
where PRB_Strain_Genotype._Strain_key = deleted._Strain_key

delete MGI_Note from MGI_Note n, deleted d
where n._Object_key = d._Strain_key
and n._MGIType_key = 10

delete MGI_Synonym from MGI_Synonym n, deleted d
where n._Object_key = d._Strain_key
and n._MGIType_key = 10

delete MGI_Translation from MGI_Translation t, MGI_TranslationType tt, deleted d
where t._TranslationType_key = tt._TranslationType_key
and tt._MGIType_key = 10
and t._Object_key = d._Strain_key

delete VOC_Annot from VOC_Annot a, VOC_AnnotType t, deleted d
where a._AnnotType_key = t._AnnotType_key
and t._MGIType_key = 10
and a._Object_key = d._Strain_key

delete ACC_Accession 
from ACC_Accession a, deleted
where a._Object_key = deleted._Strain_key
and a._MGIType_key = 10

go

checkpoint
go

quit

EOSQL
