#!/bin/sh

# 08/17/2017  jsb
# 	Added to support PWI identification of types of data associated with
#	a reference.  Note that we use BIB_Citation_Cache rather than BIB_Refs
#	as we only expect data with J: numbers to be associated with data in
#	MGI.  (BIB_Refs will start holding many unused references, as of the
#	Lit Triage project in Fall 2017.)

cd `dirname $0` && . ./Configuration

${PG_MGD_DBSCHEMADIR}/view/BIB_AssociatedData_View_drop.object

cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0

create view mgd.BIB_AssociatedData_View
as
select r._Refs_key, 
  case when exists (select 1 from gxd_index gi where r._Refs_key = gi._Refs_key) then 1
    else 0 end as has_gxdindex,
  case when exists (select 1 from img_image ii where r._Refs_key = ii._Refs_key and ii._ImageClass_key = 6481781) then 1
    else 0 end as has_gxdimages,
  case when exists (select 1 from gxd_expression e where r._Refs_key = e._Refs_key and e._Specimen_key is not null) then 1
    else 0 end as has_gxdspecimens,
  case when exists (select 1 from gxd_expression e where r._Refs_key = e._Refs_key) then 1
    else 0 end as has_gxdresults,
  case when exists (select 1 from prb_reference p where r._Refs_key = p._Refs_key) then 1
    else 0 end as has_probes,
  case when exists (select 1 from mrk_reference m where r._Refs_key = m._Refs_key) then 1
    else 0 end as has_markers,
  case when exists (select 1 from mgi_reference_assoc mr where r._Refs_key = mr._Refs_key and mr._MGIType_key = 11) then 1
    else 0 end as has_alleles,
  case when exists (select 1 from mgi_reference_assoc mr where r._Refs_key = mr._Refs_key and mr._MGIType_key = 6) then 1
    else 0 end as has_antibodies
from BIB_Citation_Cache r
group by 1


;

EOSQL
